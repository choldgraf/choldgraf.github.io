{"kind":"Notebook","sha256":"55500b6e7d71e0868b231ddc26675c164f6c96b0fb2bd632ce3d76300eb9ce26","slug":"blog.2024.mystmd-with-the-blog","location":"/blog/2024/mystmd-with-the-blog.md","dependencies":[],"frontmatter":{"title":"Re-building my blog with MySTMD","date":"2024-11-01","kernelspec":{"name":"python3","display_name":"Python 3"},"github":"https://github.com/choldgraf/choldgraf.github.io","exports":[{"format":"md","filename":"mystmd-with-the-blog.md","url":"/build/mystmd-with-the-blog-2ef12789d738c137244328df879eae73.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Wow it has been a long time since I‚Äôve last-written here. It turns out that having two small children and a very demanding job means you don‚Äôt have as much time for blogging. But that‚Äôs a whole different blog post...","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"xQ7vNL2wQP"}],"key":"FJi9KNANMH"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"I‚Äôve decided to convert my blog to use the new ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"V53IAF0q04"},{"type":"link","url":"https://mystmd.org","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"MyST Document Engine","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"ftd3fWAD8A"}],"urlSource":"https://mystmd.org","key":"cKM9IWN98k"},{"type":"text","value":". This is part of a dogfooding experiment to see what‚Äôs possible with MyST, since it‚Äôs where the Jupyter Book project is heading, and I want to see how close to ‚Äúproduction-ready‚Äù we are already.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"VXQDujfYVS"}],"key":"Xjzkm4vBrY"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"To begin, I wanted to share a few things I learned today as I tried to re-tool my old blog for use with MyST MD.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"nWIghFkV7U"}],"key":"fnQIoeRdmB"},{"type":"heading","depth":2,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"There‚Äôs no blog functionality in MyST yet","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"ZyXVALC0RU"}],"identifier":"theres-no-blog-functionality-in-myst-yet","label":"There‚Äôs no blog functionality in MyST yet","html_id":"theres-no-blog-functionality-in-myst-yet","implicit":true,"key":"zMNzohsGjw"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"As MyST is still quite young, there‚Äôs no out-of-the-box functionality for MyST (see ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"yiB2bQekXl"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/840","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"jupyter‚Äã-book‚Äã/mystmd‚Äã#840","key":"Og9CLASorz"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/840","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"840"},"internal":false,"protocol":"github","key":"ZQtXdZmLx7"},{"type":"text","value":" for the issue tracking that). So, I wanted to accomplish at least two things with my initial transfer:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"HDYfjwnOHR"}],"key":"gu99YNtOhH"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":19,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Generate a list of recent blog posts that I can insert into a few places in my site.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"ejhakyVwE8"}],"key":"UoE0MFNrAf"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Generate an RSS feed that keeps the same URLs, content, etc.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"A26ltBuhAO"}],"key":"AfK2fTcMqo"}],"key":"bipi97fFgL"},{"type":"heading","depth":2,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"What didn‚Äôt work: using the parsed MyST documents","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"jH1zGqF3m6"}],"identifier":"what-didnt-work-using-the-parsed-myst-documents","label":"What didn‚Äôt work: using the parsed MyST documents","html_id":"what-didnt-work-using-the-parsed-myst-documents","implicit":true,"key":"EKcaDU4If2"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"My first thought was to use a MyST plugin that defines a directive I could use to insert a list of blog posts.\nHowever, I learned that MyST plugins have no way to access all of the parsed documents at build time (see ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"lfSsG3zdD9"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1616","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"this issue about accessing all of the parsed documents","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"hxAna1GTgr"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1616","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1616"},"internal":false,"protocol":"github","key":"EOSJJpys9Y"},{"type":"text","value":" to track that one).","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"mafngMBEH5"}],"key":"uY4dRmKyfU"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Fortunately, ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"cBsJKzCdwe"},{"type":"link","url":"https://github.com/rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"@rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"THqh1nrXAH"}],"urlSource":"https://github.com/rowanc1","error":true,"key":"MM9Ns2Yloj"},{"type":"text","value":" made me realize that I could just ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"Oov6ORkghh"},{"type":"emphasis","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"manually","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"erRP8mzQ3p"}],"key":"DQFQyLTbb3"},{"type":"text","value":" parse my blog files and use that to build up something like a blog list. So that‚Äôs what the rest of this post is about.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"TzRtWWwyV5"}],"key":"gCI9qgbOWY"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"You can run scripts in JavaScript as part of your MyST build","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"iK8D2aJ7yd"}],"identifier":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","label":"You can run scripts in JavaScript as part of your MyST build","html_id":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","implicit":true,"key":"OH0K4OttuO"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"G2sI3ZPFOU"},{"type":"link","url":"https://mystmd.org/guide/javascript-plugins","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"MySTMD plugins documentation","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"W3dDytfLzA"}],"urlSource":"https://mystmd.org/guide/javascript-plugins","key":"p6Z4MlJQur"},{"type":"text","value":" shows a few examples for how to define your own MyST plugins. These are little JavaScript files that get executed every time you build your MyST site.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"yYDuS4RjYP"}],"key":"LO1om1aRZQ"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"The easiest thing to do here would be to write a JavaScript plugin for MyST that I can attach to my site build. You could use a JS library to parse the markdown files in ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"JE2JL1DJFQ"},{"type":"inlineCode","value":"blog/","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"jomd0utrLN"},{"type":"text","value":", grab their YAML metadata, and return MyST AST structure that would be inserted into the document. But I‚Äôm not too comfortable with JavaScript, and I found two ways that are much hackier, but much more accessible for somebody that is comfortable with Python üòé.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"znAVgXP4c2"}],"key":"LwRcJIQNhm"},{"type":"heading","depth":2,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"Write a MyST extension in Python","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"psytNNwCcH"}],"identifier":"write-a-myst-extension-in-python","label":"Write a MyST extension in Python","html_id":"write-a-myst-extension-in-python","implicit":true,"key":"lA5wSPnbdw"},{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"I bet most folks don‚Äôt know that you can write MyST extensions entirely in Python (or any other language that you can execute locally). ","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"qhjes9VViT"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Here is the MyST documentation on writing an executable MyST extension","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"CIFAIER3Qc"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"AmIBRDWo3v"},{"type":"text","value":".","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"reH3wgnOHI"}],"key":"FJxAmzltSG"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Executable extensions are treated like a black box in MyST - the MyST build process simply ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"ia0sNlRTHB"},{"type":"emphasis","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"executes","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"wiuyV2h12B"}],"key":"VyhIyJyVJE"},{"type":"text","value":" a file that you specify in ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"qfmMW4kfyZ"},{"type":"inlineCode","value":"myst.yml","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"f9oP2Tg0zm"},{"type":"text","value":", and treats anything printed to ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"qovk9dKA6b"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"ya4E0uHp6k"},{"type":"text","value":" as MyST AST that will be inserted back into the MyST document.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"N0DU2cgXOX"}],"key":"JPQiTP64NS"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Check out the examples","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"A5gz1dJ64p"}],"key":"lHS7ZpBEpg"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"There seem to be some specific ways to define the arguments that your script takes, based on whether a role, directive, or transform triggers it. See the ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"QkGCH9o7Ae"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"examples in the executable plugin docs","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"xJG1CP5t8r"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"fxkDrkSABc"},{"type":"text","value":" for inspiration.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"AqRvVEkLI8"}],"key":"C4Pe7d1zcT"}],"key":"w8BQFMwaM6"},{"type":"heading","depth":2,"position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"How do you know what MyST AST looks like?","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"L0GWFkq3k4"}],"identifier":"how-do-you-know-what-myst-ast-looks-like","label":"How do you know what MyST AST looks like?","html_id":"how-do-you-know-what-myst-ast-looks-like","implicit":true,"key":"qwLTBvxxs4"},{"type":"paragraph","position":{"start":{"line":47,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"I mention ‚Äúall you need to do is output MyST AST‚Äù, but what does that even mean?\nThe MyST AST is the abstract structure of a MyST document. It has all of the relevant information about the content in a document, as well as all the semantic tags for different ","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"yBaaKw43N5"},{"type":"emphasis","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"tWJ6MHoeXY"}],"key":"KrJLpdrOTW"},{"type":"text","value":" of content that can exist (e.g., ‚Äúitalics‚Äù, or ‚Äúadmonition boxes‚Äù).","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"fOvFr3cUQv"}],"key":"qYdUjNFGpF"},{"type":"paragraph","position":{"start":{"line":50,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"text","value":"When a MyST Markdown document is parsed, the result is MyST AST. You can see a ton of examples of AST for various MyST markdown in ","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"weKa5DDbV3"},{"type":"link","url":"https://mystmd.org/guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"the MyST guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"AWIrcRwDH3"}],"urlSource":"https://mystmd.org/guide","key":"OWD77crvEq"},{"type":"text","value":".\nJust look for the litte ‚Äúinteractive demo‚Äù boxes that show off sample MyST Markdown.","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"HAIBQcxXI8"}],"key":"ZqSjT8RSjp"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Use the JSON representation of the AST","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"key":"O6f3xPHrt5"}],"key":"GWGCurD8LC"},{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":55,"column":1}},"children":[{"type":"text","value":"You‚Äôll note that clicking the AST button gives you a few different ways to view it.\nBy default, you‚Äôll see YAML, but JSON is closer to the structure that MyST plugins expect you to output. In my case, I grabbed the JSON output, and converted it for use as a Python dictionary (this basically just meant turning ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"ckGigFrf9B"},{"type":"inlineCode","value":"true","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"LtYe6y2LM7"},{"type":"text","value":" into ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"WMaXTfQP6j"},{"type":"inlineCode","value":"True","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"sQT43VMviH"},{"type":"text","value":").","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"SLd9RfRBY4"}],"key":"ukDXmHuNfo"}],"key":"VAWws1z7HI"},{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"In my case, I needed a ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"gosyK6lYKe"},{"type":"emphasis","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"list","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"OqcDZ3gd3o"}],"key":"SvUACcwrY7"},{"type":"text","value":" of blog posts, so I found the relevant AST for what this looks like at the following locations:","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"S1G4dB6kvQ"}],"key":"MOkH75GD8L"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":60,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"s2BYDlyYFh"},{"type":"link","url":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"list items documentation","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"QTdrlAgTSu"}],"urlSource":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","key":"ok397XGBfm"},{"type":"text","value":" showed me the AST for lists.","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"hKYiPDDhSr"}],"key":"uMGvbyz5Z9"},{"type":"listItem","spread":true,"position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"T7pSJCRace"},{"type":"link","url":"https://mystmd.org/guide/typography#definition-lists","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"Definition lists documentation","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"e0HMm9AF0f"}],"urlSource":"https://mystmd.org/guide/typography#definition-lists","key":"blyS8voGMz"},{"type":"text","value":" had sample AST for an internal link.","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"HcP8ueAaEs"}],"key":"ebu0M9mt3W"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"driRqATzqM"},{"type":"link","url":"https://mystmd.org/guide/typography#inline-text-formatting","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"Inline text formatting documentation","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"zWEFY42g8o"}],"urlSource":"https://mystmd.org/guide/typography#inline-text-formatting","key":"GaXwsilrtE"},{"type":"text","value":" had examples for things like bold, italics, etc.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"SzOdPeMvHr"}],"key":"f8oH1eV7nF"}],"key":"k4MxE8FYJi"},{"type":"heading","depth":2,"position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Turning this into a Python plugin for MyST","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"u74Xh8NwHx"}],"identifier":"turning-this-into-a-python-plugin-for-myst","label":"Turning this into a Python plugin for MyST","html_id":"turning-this-into-a-python-plugin-for-myst","implicit":true,"key":"MQ4GnSbQGA"},{"type":"paragraph","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"With this in mind, I wrote a little Python extension that:","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"SYoxqkj4C0"}],"key":"l5obqAk2vf"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":68,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"children":[{"type":"text","value":"At build time, parses all of my blog post markdown files and extracts metadata from their YAML headers.","position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"key":"fJLlZfdo82"}],"key":"lovJrYX3f7"},{"type":"listItem","spread":true,"position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"Defines a ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"S01GjrtCMH"},{"type":"inlineCode","value":"bloglist","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"LkjtemDbmR"},{"type":"text","value":" directive that will insert a list of blog posts where it exists.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"bRt8HKI5xF"}],"key":"SeeNpBAJiQ"},{"type":"listItem","spread":true,"position":{"start":{"line":70,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"text","value":"Manually converts the blog post metadata into MyST AST that it prints to ","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"EedJ36Dszr"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"JvRShcDIjT"},{"type":"text","value":".","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"XIBT96vdDq"}],"key":"bkYXYJSato"}],"key":"ZaEugMiz4K"},{"type":"paragraph","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"As a result, when I call the directive in my blog, it will ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"EaAB8FnWba"},{"type":"emphasis","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"replace the directive with whatever AST is spit out by the Python script","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"LGyOfGkcpr"}],"key":"qtOwbeDHZJ"},{"type":"text","value":". You can take a look at ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"nuTGAgXddw"},{"type":"link","url":"/build/blogpost-ca7a5092d716fe78dc3536c2abc5b58e.py","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"the entire Python script here","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"hqKTq0uz5f"}],"urlSource":"../../src/blogpost.py","static":true,"protocol":"file","key":"rBOL5b6Mqy"},{"type":"text","value":".","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"GE2cSqjseo"}],"key":"JfsoH4w4x4"},{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"Now I can insert lists of blog posts wherever I like, for example here‚Äôs a list of the latest three:","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"FX6OPcCMdH"}],"key":"MdcuQZD5Rz"},{"type":"card","url":"/blog/2024/bluesky","children":[{"type":"cardTitle","children":[{"type":"text","value":"How I'm trying to use BlueSky without getting burned again","key":"S1idRJbsHG"}],"key":"kWhP738gSE"},{"type":"paragraph","children":[{"type":"text","value":"Some quick thoughts on moving from Twitter/X to BlueSky and how I'll try to use social media after being burned once by Twitter.\n","key":"jncS0NJGgN"}],"key":"J5qSEXymch"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"eh96RkI1gx"}],"key":"FX1vHyEwjo"},{"type":"text","value":"November 22, 2024 | ","key":"bVrhatAMrL"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"fQP7ZCEsaO"}],"key":"sjHUUHhJL4"},{"type":"text","value":"Chris Holdgraf","key":"NifE74Wl6n"}],"key":"VnuHT3FrVJ"}],"urlSource":"/blog/2024/bluesky","key":"yPCHUUMDmE"},{"type":"card","url":"/blog/2024/blog-list","children":[{"type":"cardTitle","children":[{"type":"text","value":"Better blog lists with the MyST AST","key":"fhzKAEnSqB"}],"key":"whjUnOYGD5"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\nOn my journey to learn more about writing with [the new MyST engine](https:///mystmd.org), I built upon [my recent update to my blog infrastructure](./programmatic-myst-with-jupyter.md) and made some improvements to my blog post list.\nHere's what it looks like now:\n\n````{note} Click here to see how it looks now\n:class: dropdown\n```{postlist}\n:number: 3\n```\n````\n\nHere's a quick rundown","key":"kL49LzWhO6"}],"key":"MxXwCdmhYv"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"Y3iBLJ3nrS"}],"key":"KXZcsl08R8"},{"type":"text","value":"November 09, 2024 | ","key":"MnQSQ6JF7U"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"mOfbHi7aiy"}],"key":"QiTGgWiYR6"},{"type":"text","value":"Chris Holdgraf","key":"K7qyhgSsUi"}],"key":"zU47jgDzEE"}],"urlSource":"/blog/2024/blog-list","key":"P5ikax6ok3"},{"type":"card","url":"/blog/2024/programmatic-myst-with-jupyter","children":[{"type":"cardTitle","children":[{"type":"text","value":"Generate MyST with Jupyter and insert it into content programmatically","key":"MNNdXrvRtm"}],"key":"QaO0ADkmp4"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\n\nWhile I've been [converting my blog to use the new MyST engine](./mystmd-with-the-blog.md), I discovered a useful MyST feature. It's not yet possible to [natively parse Jupyter Markdown outputs as MyST](https://github.com/jupyter-book/mystmd/issues/1026) but there's a workaround if you don't mind generating a temporary file.\n\nThe trick is to _write to a temporary file_","key":"WYlmuXcIPr"}],"key":"K7yJ4PQgw5"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"UKqa0ihYMD"}],"key":"JhMhgekDPe"},{"type":"text","value":"November 04, 2024 | ","key":"o2Q3QNK1xC"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"fT5En0Eg5D"}],"key":"oCmwZRf1ua"},{"type":"text","value":"Chris Holdgraf","key":"PQKPtsc4kJ"}],"key":"qM72Jmc0s0"}],"urlSource":"/blog/2024/programmatic-myst-with-jupyter","key":"e9Qsfzi5cj"},{"type":"heading","depth":2,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Adding an RSS feed","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"noy9pKcQI9"}],"identifier":"adding-an-rss-feed","label":"Adding an RSS feed","html_id":"adding-an-rss-feed","implicit":true,"key":"FklZs6I0HT"},{"type":"paragraph","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"text","value":"Because I‚Äôm running Python to define my MyST plugin, I can also use Python to build a custom RSS feed! This was relatively easy since I‚Äôd already parsed the metadata from each file.","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"key":"K5jd5vNW3r"}],"key":"XSlH3YOyJW"},{"type":"paragraph","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"I found ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"L9D6kirWIo"},{"type":"link","url":"https://github.com/lkiesow/python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"the ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"r8jG2GLU8V"},{"type":"inlineCode","value":"python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"nSIluusDcs"},{"type":"text","value":" package","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"Yd4UCZk72F"}],"urlSource":"https://github.com/lkiesow/python-feedgen","error":true,"key":"nZQw1Zc0Pu"},{"type":"text","value":", which is a little helper package for generating RSS feeds in Python. Since my MyST plugin was already written in Python, I just added a few more lines to do so.","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"qGmUpVwNUd"}],"key":"nMMF5orMnJ"},{"type":"admonition","kind":"note","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Click to see the whole Python plugin script","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"zueeubNp6i"}],"key":"UPwS9Vz6Be"},{"type":"include","file":"../../src/blogpost.py","literal":true,"filter":{},"children":[{"type":"code","value":"#!/usr/bin/env python3\nimport argparse\nimport json\nimport sys\nfrom yaml import safe_load\nfrom pathlib import Path\nimport pandas as pd\nfrom feedgen.feed import FeedGenerator\nimport unist as u\n\nDEFAULTS = {\"number\": 10}\n\nroot = Path(__file__).parent.parent\n\n# Aggregate all posts from the markdown and ipynb files\nposts = []\nfor ifile in root.rglob(\"blog/**/*.md\"):\n    if \"drafts\" in str(ifile):\n        continue\n\n    text = ifile.read_text()\n    try:\n        _, meta, content = text.split(\"---\", 2)\n    except Exception:\n        print(f\"Skipping file with error: {ifile}\", file=sys.stderr)\n        continue\n\n    # Load in YAML metadata\n    meta = safe_load(meta)\n    meta[\"path\"] = ifile.relative_to(root).with_suffix(\"\")\n    if \"title\" not in meta:\n        lines = text.splitlines()\n        for ii in lines:\n            if ii.strip().startswith(\"#\"):\n                meta[\"title\"] = ii.replace(\"#\", \"\").strip()\n                break\n    \n    # Summarize content\n    skip_lines = [\"#\", \"--\", \"%\", \"++\"]\n    content = \"\\n\".join(ii for ii in content.splitlines() if not any(ii.startswith(char) for char in skip_lines))\n    N_WORDS = 50\n    words = \" \".join(content.split(\" \")[:N_WORDS])\n    if not \"author\" in meta or not meta[\"author\"]:\n        meta[\"author\"] = \"Chris Holdgraf\"\n    meta[\"content\"] = meta.get(\"description\", words)\n    posts.append(meta)\nposts = pd.DataFrame(posts)\nposts[\"date\"] = pd.to_datetime(posts[\"date\"]).dt.tz_localize(\"US/Pacific\")\nposts = posts.dropna(subset=[\"date\"])\nposts = posts.sort_values(\"date\", ascending=False)\n\n# Generate an RSS feed\nfg = FeedGenerator()\nfg.id(\"http://chrisholdgraf.com\")\nfg.title(\"Chris Holdgraf's blog\")\nfg.author({\"name\": \"Chris Holdgraf\", \"email\": \"choldgraf@gmail.com\"})\nfg.link(href=\"http://chrisholdgraf.com\", rel=\"alternate\")\nfg.logo(\"http://chrisholdgraf.com/_static/profile.jpg\")\nfg.subtitle(\"Chris' personal blog!\")\nfg.link(href=\"http://chrisholdgraf.com/rss.xml\", rel=\"self\")\nfg.language(\"en\")\n\n# Add all my posts to it\nfor ix, irow in posts.iterrows():\n    fe = fg.add_entry()\n    fe.id(f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.published(irow[\"date\"])\n    fe.title(irow[\"title\"])\n    fe.link(href=f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.content(content=irow[\"content\"])\n\n# Write an RSS feed with latest posts\nfg.atom_file(root / \"atom.xml\", pretty=True)\nfg.rss_file(root / \"rss.xml\", pretty=True)\n\nplugin = {\n    \"name\": \"Blog Post list\",\n    \"directives\": [\n        {\n            \"name\": \"postlist\",\n            \"doc\": \"An example directive for showing a nice random image at a custom size.\",\n            \"alias\": [\"bloglist\"],\n            \"arg\": {},\n            \"options\": {\n                \"number\": {\n                    \"type\": \"int\",\n                    \"doc\": \"The number of posts to include\",\n                }\n            },\n        }\n    ],\n}\n\nchildren = []\nfor ix, irow in posts.iterrows():\n    children.append(\n        {\n          \"type\": \"card\",\n          \"url\": f\"/{irow['path'].with_suffix('')}\",\n          \"children\": [\n            {\n              \"type\": \"cardTitle\",\n              \"children\": [u.text(irow[\"title\"])]\n            },\n            {\n              \"type\": \"paragraph\",\n              \"children\": [u.text(irow['content'])]\n            },\n            {\n              \"type\": \"footer\",\n              \"children\": [\n                u.strong([u.text(\"Date: \")]), u.text(f\"{irow['date']:%B %d, %Y} | \"),\n                u.strong([u.text(\"Author: \")]), u.text(f\"{irow['author']}\"),\n              ]\n            },\n          ]\n        }\n    )\n\n\ndef declare_result(content):\n    \"\"\"Declare result as JSON to stdout\n\n    :param content: content to declare as the result\n    \"\"\"\n\n    # Format result and write to stdout\n    json.dump(content, sys.stdout, indent=2)\n    # Successfully exit\n    raise SystemExit(0)\n\n\ndef run_directive(name, data):\n    \"\"\"Execute a directive with the given name and data\n\n    :param name: name of the directive to run\n    :param data: data of the directive to run\n    \"\"\"\n    assert name == \"postlist\"\n    opts = data[\"node\"].get(\"options\", {})\n    number = int(opts.get(\"number\", DEFAULTS[\"number\"]))\n    output = children[:number]\n    return output\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    group = parser.add_mutually_exclusive_group()\n    group.add_argument(\"--role\")\n    group.add_argument(\"--directive\")\n    group.add_argument(\"--transform\")\n    args = parser.parse_args()\n\n    if args.directive:\n        data = json.load(sys.stdin)\n        declare_result(run_directive(args.directive, data))\n    elif args.transform:\n        raise NotImplementedError\n    elif args.role:\n        raise NotImplementedError\n    else:\n        declare_result(plugin)\n","lang":"python","filename":"blogpost.py","key":"flzLm3q90x"}],"key":"EjwNFc7Ks2"}],"key":"MxUQK1QTgn"},{"type":"paragraph","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"Annoyingly, you cannot just tell MyST to put a file in a particular location (see ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"z3MVOaGNww"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1196","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"jupyter‚Äã-book‚Äã/mystmd‚Äã#1196","key":"Dn3dP4qdVR"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1196","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1196"},"internal":false,"protocol":"github","key":"L5CsjYeD9h"},{"type":"text","value":" tracking this one). So I had to manually move this file to my build output folder in my GitHub action. Hopefully this functionality gets updated soon. Here‚Äôs what that looks like:","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"vHI9w0Gin0"}],"key":"IEn3kA2uqw"},{"type":"include","file":"../../.github/workflows/deploy.yml","literal":true,"filter":{"startAt":"# Move RSS feeds to output folder","endAt":"# If we've pushed to main"},"children":[{"type":"code","value":"    # Move RSS feeds to output folder\n    - name: Move RSS feeds\n      run: |\n        cp atom.xml _build/html/atom.xml\n        cp rss.xml _build/html/rss.xml\n\n    # If we've pushed to main, push the book's HTML to github-pages","lang":"yaml","filename":"deploy.yml","key":"qzpJk8spWY"}],"key":"h16yetR7x4"}],"key":"eFOjCOVrNW"}],"key":"vx98a5fjV6"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"How I‚Äôm trying to use BlueSky without getting burned again","url":"/blog/2024/bluesky","group":"2024"},"next":{"title":"Generate MyST with Jupyter and insert it into content programmatically","url":"/blog/2024/programmatic-myst-with-jupyter","group":"2024"}}},"domain":"http://localhost:3000"}