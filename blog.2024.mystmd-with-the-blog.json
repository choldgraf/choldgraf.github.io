{"kind":"Notebook","sha256":"55500b6e7d71e0868b231ddc26675c164f6c96b0fb2bd632ce3d76300eb9ce26","slug":"blog.2024.mystmd-with-the-blog","location":"/blog/2024/mystmd-with-the-blog.md","dependencies":[],"frontmatter":{"title":"Re-building my blog with MySTMD","date":"2024-11-01","kernelspec":{"name":"python3","display_name":"Python 3"},"github":"https://github.com/choldgraf/choldgraf.github.io","exports":[{"format":"md","filename":"mystmd-with-the-blog.md","url":"/build/mystmd-with-the-blog-f9b73b1257a2235b1d5c482df65bdf2d.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Wow it has been a long time since I‚Äôve last-written here. It turns out that having two small children and a very demanding job means you don‚Äôt have as much time for blogging. But that‚Äôs a whole different blog post...","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"asNXBwp9sk"}],"key":"QjOHU4IUhx"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"I‚Äôve decided to convert my blog to use the new ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Qp3EyiXDJj"},{"type":"link","url":"https://mystmd.org","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"MyST Document Engine","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"DZpkrZIrju"}],"urlSource":"https://mystmd.org","key":"x3uzID3dGK"},{"type":"text","value":". This is part of a dogfooding experiment to see what‚Äôs possible with MyST, since it‚Äôs where the Jupyter Book project is heading, and I want to see how close to ‚Äúproduction-ready‚Äù we are already.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"RShWJUzOCU"}],"key":"FdCbug57SH"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"To begin, I wanted to share a few things I learned today as I tried to re-tool my old blog for use with MyST MD.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"VmOtgNhk1F"}],"key":"j774dYHkBJ"},{"type":"heading","depth":2,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"There‚Äôs no blog functionality in MyST yet","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"uXUKq04xWL"}],"identifier":"theres-no-blog-functionality-in-myst-yet","label":"There‚Äôs no blog functionality in MyST yet","html_id":"theres-no-blog-functionality-in-myst-yet","implicit":true,"key":"OuF0ymupTM"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"As MyST is still quite young, there‚Äôs no out-of-the-box functionality for MyST (see ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"JwKlV1vjrP"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/840","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"jupyter‚Äã-book‚Äã/mystmd‚Äã#840","key":"sMldwoDWDX"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/840","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"840"},"internal":false,"protocol":"github","key":"Dezkt4osv5"},{"type":"text","value":" for the issue tracking that). So, I wanted to accomplish at least two things with my initial transfer:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"vbl9lwWfcy"}],"key":"L31SLPEAGa"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":19,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Generate a list of recent blog posts that I can insert into a few places in my site.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"v7edv8rbNl"}],"key":"zw9mDai2fe"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Generate an RSS feed that keeps the same URLs, content, etc.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"jpc0oO9qg9"}],"key":"N1KT0TCmvA"}],"key":"yNAEwTYPCM"},{"type":"heading","depth":2,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"What didn‚Äôt work: using the parsed MyST documents","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"sJSrVCDKmL"}],"identifier":"what-didnt-work-using-the-parsed-myst-documents","label":"What didn‚Äôt work: using the parsed MyST documents","html_id":"what-didnt-work-using-the-parsed-myst-documents","implicit":true,"key":"mVEw3yLGst"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"My first thought was to use a MyST plugin that defines a directive I could use to insert a list of blog posts.\nHowever, I learned that MyST plugins have no way to access all of the parsed documents at build time (see ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"iWS2l3lb8n"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1616","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"this issue about accessing all of the parsed documents","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"aoRpy5zDkJ"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1616","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1616"},"internal":false,"protocol":"github","key":"wn1aAE84Ai"},{"type":"text","value":" to track that one).","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"OAYt6sZdl7"}],"key":"PItxK3ipRm"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Fortunately, ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"t9akhbN019"},{"type":"link","url":"https://github.com/rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"@rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"H4Quj4rKov"}],"urlSource":"https://github.com/rowanc1","error":true,"key":"dFA3zkB8Eq"},{"type":"text","value":" made me realize that I could just ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"twZHcaTxgS"},{"type":"emphasis","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"manually","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"pgNPrUVtZK"}],"key":"Igos3i1AA6"},{"type":"text","value":" parse my blog files and use that to build up something like a blog list. So that‚Äôs what the rest of this post is about.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"XjOxAaJrkw"}],"key":"UGU8MssDRK"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"You can run scripts in JavaScript as part of your MyST build","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"w3iiKsuGyO"}],"identifier":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","label":"You can run scripts in JavaScript as part of your MyST build","html_id":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","implicit":true,"key":"wXMt2d3kXW"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"x6r0F6B7BK"},{"type":"link","url":"https://mystmd.org/guide/javascript-plugins","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"MySTMD plugins documentation","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"icGoPdrIWL"}],"urlSource":"https://mystmd.org/guide/javascript-plugins","key":"WWHoHXa61v"},{"type":"text","value":" shows a few examples for how to define your own MyST plugins. These are little JavaScript files that get executed every time you build your MyST site.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"gUki8lr7Ln"}],"key":"yXGnLnpfvW"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"The easiest thing to do here would be to write a JavaScript plugin for MyST that I can attach to my site build. You could use a JS library to parse the markdown files in ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"Qnol9GyGhz"},{"type":"inlineCode","value":"blog/","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"i05WxwMCyl"},{"type":"text","value":", grab their YAML metadata, and return MyST AST structure that would be inserted into the document. But I‚Äôm not too comfortable with JavaScript, and I found two ways that are much hackier, but much more accessible for somebody that is comfortable with Python üòé.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"DllFJnZkqy"}],"key":"XE8n2LwOVo"},{"type":"heading","depth":2,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"Write a MyST extension in Python","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"sA1uF9pizD"}],"identifier":"write-a-myst-extension-in-python","label":"Write a MyST extension in Python","html_id":"write-a-myst-extension-in-python","implicit":true,"key":"oLf7AnKSPO"},{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"I bet most folks don‚Äôt know that you can write MyST extensions entirely in Python (or any other language that you can execute locally). ","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"azdLbGbZaV"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Here is the MyST documentation on writing an executable MyST extension","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"fjYj9PbkVU"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"cN4a8lQ1ew"},{"type":"text","value":".","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"TCBgEQeGig"}],"key":"ZIltPlGn12"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Executable extensions are treated like a black box in MyST - the MyST build process simply ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"Jd6zJYYW5J"},{"type":"emphasis","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"executes","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"WNJeVsj7SR"}],"key":"byJXEeodRG"},{"type":"text","value":" a file that you specify in ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"op0YJawMd0"},{"type":"inlineCode","value":"myst.yml","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"ENV5SNlqy5"},{"type":"text","value":", and treats anything printed to ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"bvvqDj18CV"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"raEhgdN6Tu"},{"type":"text","value":" as MyST AST that will be inserted back into the MyST document.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"FpW6juF6kJ"}],"key":"nx6PKELZZs"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Check out the examples","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"K1jkKXAPKY"}],"key":"w3x3s17e4L"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"There seem to be some specific ways to define the arguments that your script takes, based on whether a role, directive, or transform triggers it. See the ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"ZjqO8B0LD2"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"examples in the executable plugin docs","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"wCXDHEtpW0"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"NDSbV1Z722"},{"type":"text","value":" for inspiration.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"KzKJBHofVB"}],"key":"UhDPCYreN2"}],"key":"XayP0cecQ0"},{"type":"heading","depth":2,"position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"How do you know what MyST AST looks like?","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"BvqOMjiAmq"}],"identifier":"how-do-you-know-what-myst-ast-looks-like","label":"How do you know what MyST AST looks like?","html_id":"how-do-you-know-what-myst-ast-looks-like","implicit":true,"key":"Xg52DidJpm"},{"type":"paragraph","position":{"start":{"line":47,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"I mention ‚Äúall you need to do is output MyST AST‚Äù, but what does that even mean?\nThe MyST AST is the abstract structure of a MyST document. It has all of the relevant information about the content in a document, as well as all the semantic tags for different ","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"GsItxWS57X"},{"type":"emphasis","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"f2jq4pI0kT"}],"key":"Pm0CttZGU3"},{"type":"text","value":" of content that can exist (e.g., ‚Äúitalics‚Äù, or ‚Äúadmonition boxes‚Äù).","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"tYgJJXQjDb"}],"key":"JFUWp1hE1J"},{"type":"paragraph","position":{"start":{"line":50,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"text","value":"When a MyST Markdown document is parsed, the result is MyST AST. You can see a ton of examples of AST for various MyST markdown in ","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"QPGp80CL6o"},{"type":"link","url":"https://mystmd.org/guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"the MyST guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"a5XWhyNrPZ"}],"urlSource":"https://mystmd.org/guide","key":"OhanvsBSDZ"},{"type":"text","value":".\nJust look for the litte ‚Äúinteractive demo‚Äù boxes that show off sample MyST Markdown.","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"lioWQ2koRG"}],"key":"d7hnYD39Gt"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Use the JSON representation of the AST","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"key":"IE7jxnENW2"}],"key":"GOeFBenXRJ"},{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":55,"column":1}},"children":[{"type":"text","value":"You‚Äôll note that clicking the AST button gives you a few different ways to view it.\nBy default, you‚Äôll see YAML, but JSON is closer to the structure that MyST plugins expect you to output. In my case, I grabbed the JSON output, and converted it for use as a Python dictionary (this basically just meant turning ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"EzjBzsJqcf"},{"type":"inlineCode","value":"true","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"C7uRkjaW62"},{"type":"text","value":" into ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"h7WTmefGnO"},{"type":"inlineCode","value":"True","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"kwsCdm3qZv"},{"type":"text","value":").","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"KmHXB50fEJ"}],"key":"I7HxcmgoxT"}],"key":"jxKcwDrvn8"},{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"In my case, I needed a ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"vHHj44JOqx"},{"type":"emphasis","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"list","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"foJsgnI2jI"}],"key":"MZRTZTuOrQ"},{"type":"text","value":" of blog posts, so I found the relevant AST for what this looks like at the following locations:","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"a77dp3iiQr"}],"key":"HslNfH1Pbr"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":60,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"zPChipl5mM"},{"type":"link","url":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"list items documentation","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"TjQZ9pIjbh"}],"urlSource":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","key":"QrLcYEQoW7"},{"type":"text","value":" showed me the AST for lists.","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"UbV3rjByWx"}],"key":"JShmXdN0Mx"},{"type":"listItem","spread":true,"position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"vZH5SdnyUX"},{"type":"link","url":"https://mystmd.org/guide/typography#definition-lists","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"Definition lists documentation","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"rq0kU6kEbZ"}],"urlSource":"https://mystmd.org/guide/typography#definition-lists","key":"JOKYupust5"},{"type":"text","value":" had sample AST for an internal link.","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"YdmHbssuJk"}],"key":"gV9qEYUwdO"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"Zak20tJYSL"},{"type":"link","url":"https://mystmd.org/guide/typography#inline-text-formatting","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"Inline text formatting documentation","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"lk8owEjUIM"}],"urlSource":"https://mystmd.org/guide/typography#inline-text-formatting","key":"qEZIS4vVln"},{"type":"text","value":" had examples for things like bold, italics, etc.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"CVKohsYHp0"}],"key":"dtnQpCJiZQ"}],"key":"W7Kpv3cKXN"},{"type":"heading","depth":2,"position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Turning this into a Python plugin for MyST","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"pAG2vpYD2V"}],"identifier":"turning-this-into-a-python-plugin-for-myst","label":"Turning this into a Python plugin for MyST","html_id":"turning-this-into-a-python-plugin-for-myst","implicit":true,"key":"SUh7KlHz66"},{"type":"paragraph","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"With this in mind, I wrote a little Python extension that:","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"PReP27LbTh"}],"key":"IPclcIIREn"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":68,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"children":[{"type":"text","value":"At build time, parses all of my blog post markdown files and extracts metadata from their YAML headers.","position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"key":"ig0vxnByJl"}],"key":"tvxCBwzZfs"},{"type":"listItem","spread":true,"position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"Defines a ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"Q54RiqwCC3"},{"type":"inlineCode","value":"bloglist","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"urnL0Fkiar"},{"type":"text","value":" directive that will insert a list of blog posts where it exists.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"mnNXhAuZrY"}],"key":"BnxOT4iuQf"},{"type":"listItem","spread":true,"position":{"start":{"line":70,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"text","value":"Manually converts the blog post metadata into MyST AST that it prints to ","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"wxBblE0DMr"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"jhnBvIr1ZB"},{"type":"text","value":".","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"O2hNJIHsbG"}],"key":"vZRUK3VnbQ"}],"key":"OVK8CGOVth"},{"type":"paragraph","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"As a result, when I call the directive in my blog, it will ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"L3eziapCfw"},{"type":"emphasis","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"replace the directive with whatever AST is spit out by the Python script","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"cTeOXygbe3"}],"key":"TbXBnmTSVm"},{"type":"text","value":". You can take a look at ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"caQPJg5dJV"},{"type":"link","url":"/build/blogpost-38a955b251df7043a1d6b9a49fa47547.py","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"the entire Python script here","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"tNrj5K00Bq"}],"urlSource":"../../src/blogpost.py","static":true,"protocol":"file","key":"pIf2NchBB8"},{"type":"text","value":".","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"DgmzpDGBhV"}],"key":"qnc4SbPrcG"},{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"Now I can insert lists of blog posts wherever I like, for example here‚Äôs a list of the latest three:","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"yIfnSOSOdr"}],"key":"oaQv15SlNk"},{"type":"card","url":"/blog/2024/bluesky","children":[{"type":"cardTitle","children":[{"type":"text","value":"Thoughts on moving from Twitter/X to BlueSky","key":"zgxRnqp1bG"}],"key":"WLCQBT9tzf"},{"type":"paragraph","children":[{"type":"text","value":"\n\nI see a lot of individuals and communities in my network moving their primary social media presence over to [BlueSky](https://bsky.social) in the last few weeks.\nI've decided to give BlueSky a shot myself, and thought I'd share some of my rationale for why, and how I'm approaching it.\n\n\nA lot of my","key":"CBGiXbc6Ui"}],"key":"Z7EX3lyvwD"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"nhSmCJKse1"}],"key":"C7Btw3lSsM"},{"type":"text","value":"November 22, 2024 | ","key":"zv8R9Bneah"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"EhwWIOlZDy"}],"key":"gVlEs98JSx"},{"type":"text","value":"Chris Holdgraf","key":"XerXHwsNhu"}],"key":"MOUgnufPd0"}],"urlSource":"/blog/2024/bluesky","key":"yTIlTqaNMz"},{"type":"card","url":"/blog/2024/blog-list","children":[{"type":"cardTitle","children":[{"type":"text","value":"Better blog lists with the MyST AST","key":"hpVz5NVIuK"}],"key":"U5WbOdZDD7"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\nOn my journey to learn more about writing with [the new MyST engine](https:///mystmd.org), I built upon [my recent update to my blog infrastructure](./programmatic-myst-with-jupyter.md) and made some improvements to my blog post list.\nHere's what it looks like now:\n\n````{note} Click here to see how it looks now\n:class: dropdown\n```{postlist}\n:number: 3\n```\n````\n\nHere's a quick rundown","key":"cAtCp9TJwZ"}],"key":"NdnA7TPgdN"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"cDloqYiphi"}],"key":"MrB3UvjD9Q"},{"type":"text","value":"November 09, 2024 | ","key":"xMOEw8p54t"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"PCb9Eunr7H"}],"key":"In9XrulKKu"},{"type":"text","value":"Chris Holdgraf","key":"eO9fGMUM0h"}],"key":"sn9Kb6vdDT"}],"urlSource":"/blog/2024/blog-list","key":"O2D1B4gLF8"},{"type":"card","url":"/blog/2024/programmatic-myst-with-jupyter","children":[{"type":"cardTitle","children":[{"type":"text","value":"Generate MyST with Jupyter and insert it into content programmatically","key":"Td1IxXF4po"}],"key":"cMv3Sz68dI"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\n\nWhile I've been [converting my blog to use the new MyST engine](./mystmd-with-the-blog.md), I discovered a useful MyST feature. It's not yet possible to [natively parse Jupyter Markdown outputs as MyST](https://github.com/jupyter-book/mystmd/issues/1026) but there's a workaround if you don't mind generating a temporary file.\n\nThe trick is to _write to a temporary file_","key":"SBaS4u3e86"}],"key":"MNPxlQMUr6"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"xIyRNRb1D6"}],"key":"i60xRtmZbO"},{"type":"text","value":"November 04, 2024 | ","key":"DOa7PiUm2Q"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"R1IuYMu93b"}],"key":"jVILNYr5xx"},{"type":"text","value":"Chris Holdgraf","key":"T2saa0eVZz"}],"key":"Lk2XcymKdA"}],"urlSource":"/blog/2024/programmatic-myst-with-jupyter","key":"pR4wKR2RwN"},{"type":"heading","depth":2,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Adding an RSS feed","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"TzDdRKAKHD"}],"identifier":"adding-an-rss-feed","label":"Adding an RSS feed","html_id":"adding-an-rss-feed","implicit":true,"key":"t6CnU2VXoj"},{"type":"paragraph","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"text","value":"Because I‚Äôm running Python to define my MyST plugin, I can also use Python to build a custom RSS feed! This was relatively easy since I‚Äôd already parsed the metadata from each file.","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"key":"bqSeleA4lh"}],"key":"smpGcHlSlw"},{"type":"paragraph","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"I found ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"Gm4WVTiqqD"},{"type":"link","url":"https://github.com/lkiesow/python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"the ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"c471O9z06d"},{"type":"inlineCode","value":"python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"XiZuHYISfz"},{"type":"text","value":" package","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"U7GIahmyWz"}],"urlSource":"https://github.com/lkiesow/python-feedgen","error":true,"key":"WDup7PPZG3"},{"type":"text","value":", which is a little helper package for generating RSS feeds in Python. Since my MyST plugin was already written in Python, I just added a few more lines to do so.","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"nAomDjJaXG"}],"key":"mzvsvPIhlO"},{"type":"admonition","kind":"note","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Click to see the whole Python plugin script","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"zIcDLf2iGH"}],"key":"P3LNCoWhU5"},{"type":"include","file":"../../src/blogpost.py","literal":true,"filter":{},"children":[{"type":"code","value":"#!/usr/bin/env python3\nimport argparse\nimport json\nimport sys\nfrom yaml import safe_load\nfrom pathlib import Path\nimport pandas as pd\nfrom feedgen.feed import FeedGenerator\nimport unist as u\n\nDEFAULTS = {\"number\": 10}\n\nroot = Path(__file__).parent.parent\n\n# Aggregate all posts from the markdown and ipynb files\nposts = []\nfor ifile in root.rglob(\"blog/**/*.md\"):\n    if \"drafts\" in str(ifile):\n        continue\n\n    text = ifile.read_text()\n    try:\n        _, meta, content = text.split(\"---\", 2)\n    except Exception:\n        print(f\"Skipping file with error: {ifile}\", file=sys.stderr)\n        continue\n\n    # Load in YAML metadata\n    meta = safe_load(meta)\n    meta[\"path\"] = ifile.relative_to(root).with_suffix(\"\")\n    if \"title\" not in meta:\n        lines = text.splitlines()\n        for ii in lines:\n            if ii.strip().startswith(\"#\"):\n                meta[\"title\"] = ii.replace(\"#\", \"\").strip()\n                break\n    \n    # Summarize content\n    skip_lines = [\"#\", \"--\", \"%\", \"++\"]\n    content = \"\\n\".join(ii for ii in content.splitlines() if not any(ii.startswith(char) for char in skip_lines))\n    N_WORDS = 50\n    words = \" \".join(content.split(\" \")[:N_WORDS])\n    if not \"author\" in meta or not meta[\"author\"]:\n        meta[\"author\"] = \"Chris Holdgraf\"\n    meta[\"content\"] = meta.get(\"description\", words)\n    posts.append(meta)\nposts = pd.DataFrame(posts)\nposts[\"date\"] = pd.to_datetime(posts[\"date\"]).dt.tz_localize(\"US/Pacific\")\nposts = posts.dropna(subset=[\"date\"])\nposts = posts.sort_values(\"date\", ascending=False)\n\n# Generate an RSS feed\nfg = FeedGenerator()\nfg.id(\"http://chrisholdgraf.com\")\nfg.title(\"Chris Holdgraf's blog\")\nfg.author({\"name\": \"Chris Holdgraf\", \"email\": \"choldgraf@gmail.com\"})\nfg.link(href=\"http://chrisholdgraf.com\", rel=\"alternate\")\nfg.logo(\"http://chrisholdgraf.com/_static/profile.jpg\")\nfg.subtitle(\"Chris' personal blog!\")\nfg.link(href=\"http://chrisholdgraf.com/rss.xml\", rel=\"self\")\nfg.language(\"en\")\n\n# Add all my posts to it\nfor ix, irow in posts.iterrows():\n    fe = fg.add_entry()\n    fe.id(f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.published(irow[\"date\"])\n    fe.title(irow[\"title\"])\n    fe.link(href=f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.content(content=irow[\"content\"])\n\n# Write an RSS feed with latest posts\nfg.atom_file(root / \"atom.xml\", pretty=True)\nfg.rss_file(root / \"rss.xml\", pretty=True)\n\nplugin = {\n    \"name\": \"Blog Post list\",\n    \"directives\": [\n        {\n            \"name\": \"postlist\",\n            \"doc\": \"An example directive for showing a nice random image at a custom size.\",\n            \"alias\": [\"bloglist\"],\n            \"arg\": {},\n            \"options\": {\n                \"number\": {\n                    \"type\": \"int\",\n                    \"doc\": \"The number of posts to include\",\n                }\n            },\n        }\n    ],\n}\n\nchildren = []\nfor ix, irow in posts.iterrows():\n    children.append(\n        {\n          \"type\": \"card\",\n          \"url\": f\"/{irow['path'].with_suffix('')}\",\n          \"children\": [\n            {\n              \"type\": \"cardTitle\",\n              \"children\": [u.text(irow[\"title\"])]\n            },\n            {\n              \"type\": \"paragraph\",\n              \"children\": [u.text(irow['content'])]\n            },\n            {\n              \"type\": \"footer\",\n              \"children\": [\n                u.strong([u.text(\"Date: \")]), u.text(f\"{irow['date']:%B %d, %Y} | \"),\n                u.strong([u.text(\"Author: \")]), u.text(f\"{irow['author']}\"),\n              ]\n            },\n          ]\n        }\n    )\n\n\ndef declare_result(content):\n    \"\"\"Declare result as JSON to stdout\n\n    :param content: content to declare as the result\n    \"\"\"\n\n    # Format result and write to stdout\n    json.dump(content, sys.stdout, indent=2)\n    # Successfully exit\n    raise SystemExit(0)\n\n\ndef run_directive(name, data):\n    \"\"\"Execute a directive with the given name and data\n\n    :param name: name of the directive to run\n    :param data: data of the directive to run\n    \"\"\"\n    assert name == \"postlist\"\n    opts = data[\"node\"].get(\"options\", {})\n    number = int(opts.get(\"number\", DEFAULTS[\"number\"]))\n    output = children[:number]\n    return output\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    group = parser.add_mutually_exclusive_group()\n    group.add_argument(\"--role\")\n    group.add_argument(\"--directive\")\n    group.add_argument(\"--transform\")\n    args = parser.parse_args()\n\n    if args.directive:\n        data = json.load(sys.stdin)\n        declare_result(run_directive(args.directive, data))\n    elif args.transform:\n        raise NotImplementedError\n    elif args.role:\n        raise NotImplementedError\n    else:\n        declare_result(plugin)\n","lang":"python","filename":"blogpost.py","key":"ndmpcxy2o5"}],"key":"Fm9d8B0Ubn"}],"key":"fhpGXUamjm"},{"type":"paragraph","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"Annoyingly, you cannot just tell MyST to put a file in a particular location (see ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"gTnsgqR36z"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1196","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"jupyter‚Äã-book‚Äã/mystmd‚Äã#1196","key":"el6y7MkrbV"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1196","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1196"},"internal":false,"protocol":"github","key":"T2kKIx5QSK"},{"type":"text","value":" tracking this one). So I had to manually move this file to my build output folder in my GitHub action. Hopefully this functionality gets updated soon. Here‚Äôs what that looks like:","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"FOeuQg014b"}],"key":"qJNoOvFzLO"},{"type":"include","file":"../../.github/workflows/deploy.yml","literal":true,"filter":{"startAt":"# Move RSS feeds to output folder","endAt":"# If we've pushed to main"},"children":[{"type":"code","value":"    # Move RSS feeds to output folder\n    - name: Move RSS feeds\n      run: |\n        cp atom.xml _build/html/atom.xml\n        cp rss.xml _build/html/rss.xml\n\n    # If we've pushed to main, push the book's HTML to github-pages","lang":"yaml","filename":"deploy.yml","key":"EEEptsmO9K"}],"key":"fOnyzDYYQf"}],"key":"LkWdRUjiBf"}],"key":"uzw16UTaEa"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Thoughts on moving from Twitter/X to BlueSky","url":"/blog/2024/bluesky","group":"2024"},"next":{"title":"Generate MyST with Jupyter and insert it into content programmatically","url":"/blog/2024/programmatic-myst-with-jupyter","group":"2024"}}},"domain":"http://localhost:3000"}