{"kind":"Notebook","sha256":"55500b6e7d71e0868b231ddc26675c164f6c96b0fb2bd632ce3d76300eb9ce26","slug":"blog.2024.mystmd-with-the-blog","location":"/blog/2024/mystmd-with-the-blog.md","dependencies":[],"frontmatter":{"title":"Re-building my blog with MySTMD","date":"2024-11-01","kernelspec":{"name":"python3","display_name":"Python 3"},"github":"https://github.com/choldgraf/choldgraf.github.io","exports":[{"format":"md","filename":"mystmd-with-the-blog.md","url":"/build/mystmd-with-the-blog-39a30629cc48b7f826dac6666faec35d.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Wow it has been a long time since I‚Äôve last-written here. It turns out that having two small children and a very demanding job means you don‚Äôt have as much time for blogging. But that‚Äôs a whole different blog post...","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"rYHdNu8hdg"}],"key":"dDosyt7XFa"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"I‚Äôve decided to convert my blog to use the new ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"tluElefGSG"},{"type":"link","url":"https://mystmd.org","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"MyST Document Engine","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"lRWnUAzghe"}],"urlSource":"https://mystmd.org","key":"YkrlrtCXd4"},{"type":"text","value":". This is part of a dogfooding experiment to see what‚Äôs possible with MyST, since it‚Äôs where the Jupyter Book project is heading, and I want to see how close to ‚Äúproduction-ready‚Äù we are already.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"vIM9qC7LU7"}],"key":"z5xX7Kh8Na"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"To begin, I wanted to share a few things I learned today as I tried to re-tool my old blog for use with MyST MD.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"faDrTn0UH8"}],"key":"BKQaKa0IlO"},{"type":"heading","depth":2,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"There‚Äôs no blog functionality in MyST yet","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"HjqWZCOeM1"}],"identifier":"theres-no-blog-functionality-in-myst-yet","label":"There‚Äôs no blog functionality in MyST yet","html_id":"theres-no-blog-functionality-in-myst-yet","implicit":true,"key":"a3MMYrskMO"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"As MyST is still quite young, there‚Äôs no out-of-the-box functionality for MyST (see ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"L9NwbSjdGC"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/840","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"jupyter‚Äã-book‚Äã/mystmd‚Äã#840","key":"jbiqflDFYg"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/840","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"840"},"internal":false,"protocol":"github","key":"XIElwLGAks"},{"type":"text","value":" for the issue tracking that). So, I wanted to accomplish at least two things with my initial transfer:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"Hh0QQtQImN"}],"key":"TWv5HCsE7L"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":19,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Generate a list of recent blog posts that I can insert into a few places in my site.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"sNbfqoP4hJ"}],"key":"XnpLEWOk7N"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Generate an RSS feed that keeps the same URLs, content, etc.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"qV1LrmevD1"}],"key":"UOXIYmgbyD"}],"key":"G2QVe9yPvK"},{"type":"heading","depth":2,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"What didn‚Äôt work: using the parsed MyST documents","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"EV0AWQHRCb"}],"identifier":"what-didnt-work-using-the-parsed-myst-documents","label":"What didn‚Äôt work: using the parsed MyST documents","html_id":"what-didnt-work-using-the-parsed-myst-documents","implicit":true,"key":"KdwYJAnlbd"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"My first thought was to use a MyST plugin that defines a directive I could use to insert a list of blog posts.\nHowever, I learned that MyST plugins have no way to access all of the parsed documents at build time (see ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"LC0lmP3MnG"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1616","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"this issue about accessing all of the parsed documents","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"X9NFSsmx9b"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1616","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1616"},"internal":false,"protocol":"github","key":"gefiKEblBr"},{"type":"text","value":" to track that one).","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"uWz5X6VDkL"}],"key":"bTy63AAJpW"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Fortunately, ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"Hvr6fCSKmo"},{"type":"link","url":"https://github.com/rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"@rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"dnmxifWqwA"}],"urlSource":"https://github.com/rowanc1","error":true,"key":"qodQM9AVNc"},{"type":"text","value":" made me realize that I could just ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"YuJGETxuu4"},{"type":"emphasis","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"manually","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"F9GvWtvNPw"}],"key":"PGFEQ3Yj2e"},{"type":"text","value":" parse my blog files and use that to build up something like a blog list. So that‚Äôs what the rest of this post is about.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"U0NsGxtT6i"}],"key":"u2RddrHlEO"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"You can run scripts in JavaScript as part of your MyST build","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"jRrWESa0Ck"}],"identifier":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","label":"You can run scripts in JavaScript as part of your MyST build","html_id":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","implicit":true,"key":"C6LyrhdyaE"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"LWYBRVEAP4"},{"type":"link","url":"https://mystmd.org/guide/javascript-plugins","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"MySTMD plugins documentation","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"ggMCCXBRPI"}],"urlSource":"https://mystmd.org/guide/javascript-plugins","key":"QfLc1gmaUx"},{"type":"text","value":" shows a few examples for how to define your own MyST plugins. These are little JavaScript files that get executed every time you build your MyST site.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"EkOCTbBMSR"}],"key":"yN6H7vFY2d"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"The easiest thing to do here would be to write a JavaScript plugin for MyST that I can attach to my site build. You could use a JS library to parse the markdown files in ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"Cu4OIvfU7s"},{"type":"inlineCode","value":"blog/","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"ICsJXggr2v"},{"type":"text","value":", grab their YAML metadata, and return MyST AST structure that would be inserted into the document. But I‚Äôm not too comfortable with JavaScript, and I found two ways that are much hackier, but much more accessible for somebody that is comfortable with Python üòé.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"ZqOxugMM9Q"}],"key":"zGkpPHTRM8"},{"type":"heading","depth":2,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"Write a MyST extension in Python","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"DrrcP0w3uO"}],"identifier":"write-a-myst-extension-in-python","label":"Write a MyST extension in Python","html_id":"write-a-myst-extension-in-python","implicit":true,"key":"VXfwwZawKX"},{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"I bet most folks don‚Äôt know that you can write MyST extensions entirely in Python (or any other language that you can execute locally). ","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"ZJUQFcVnV6"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Here is the MyST documentation on writing an executable MyST extension","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"ujyyUypDIO"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"BWNt63jXXV"},{"type":"text","value":".","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"g8CpYCBpyo"}],"key":"gGjFA9LOgR"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Executable extensions are treated like a black box in MyST - the MyST build process simply ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"cXfzoQP1zo"},{"type":"emphasis","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"executes","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"Ak151CyveA"}],"key":"UlNDERzAHR"},{"type":"text","value":" a file that you specify in ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"kRpy3nMeQN"},{"type":"inlineCode","value":"myst.yml","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"t20sFNHgYp"},{"type":"text","value":", and treats anything printed to ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"RbkyfZlmki"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"geBdcYNeHV"},{"type":"text","value":" as MyST AST that will be inserted back into the MyST document.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"VkzS63XcPC"}],"key":"y0Wnitp1sk"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Check out the examples","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"qNyGAK9lPN"}],"key":"pew5qzanKT"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"There seem to be some specific ways to define the arguments that your script takes, based on whether a role, directive, or transform triggers it. See the ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"k5KKl9C5fG"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"examples in the executable plugin docs","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"EoLYzHuHik"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"GRMvJ7NBCS"},{"type":"text","value":" for inspiration.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"vXisQRjcKm"}],"key":"tfRYD412Vj"}],"key":"eGrDGkP3nu"},{"type":"heading","depth":2,"position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"How do you know what MyST AST looks like?","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"MpBqkgtAal"}],"identifier":"how-do-you-know-what-myst-ast-looks-like","label":"How do you know what MyST AST looks like?","html_id":"how-do-you-know-what-myst-ast-looks-like","implicit":true,"key":"qGIZlGjfys"},{"type":"paragraph","position":{"start":{"line":47,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"I mention ‚Äúall you need to do is output MyST AST‚Äù, but what does that even mean?\nThe MyST AST is the abstract structure of a MyST document. It has all of the relevant information about the content in a document, as well as all the semantic tags for different ","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"oDGfDRYBpq"},{"type":"emphasis","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"dsZ649B1pt"}],"key":"VeQnQb5uEb"},{"type":"text","value":" of content that can exist (e.g., ‚Äúitalics‚Äù, or ‚Äúadmonition boxes‚Äù).","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"rQE9jicJG8"}],"key":"oZHivFGf3s"},{"type":"paragraph","position":{"start":{"line":50,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"text","value":"When a MyST Markdown document is parsed, the result is MyST AST. You can see a ton of examples of AST for various MyST markdown in ","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"o4sQIHxVWG"},{"type":"link","url":"https://mystmd.org/guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"the MyST guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"IbFO0WtwWK"}],"urlSource":"https://mystmd.org/guide","key":"fi7jiIHFRX"},{"type":"text","value":".\nJust look for the litte ‚Äúinteractive demo‚Äù boxes that show off sample MyST Markdown.","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"H2wYs9KiMk"}],"key":"HlFBOlIhU7"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Use the JSON representation of the AST","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"key":"cK0YyeeXbW"}],"key":"z0eKc7bSEK"},{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":55,"column":1}},"children":[{"type":"text","value":"You‚Äôll note that clicking the AST button gives you a few different ways to view it.\nBy default, you‚Äôll see YAML, but JSON is closer to the structure that MyST plugins expect you to output. In my case, I grabbed the JSON output, and converted it for use as a Python dictionary (this basically just meant turning ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"eT3bMKn0l8"},{"type":"inlineCode","value":"true","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"ASNrF3PHCa"},{"type":"text","value":" into ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"WMnloZDgjz"},{"type":"inlineCode","value":"True","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"mSi9U3L5Xr"},{"type":"text","value":").","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"KGKhc2o7Mi"}],"key":"sac9kixYPO"}],"key":"CXqwCsvP8i"},{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"In my case, I needed a ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"dTO5UTEIis"},{"type":"emphasis","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"list","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"dHhCcTvefF"}],"key":"o3pNNBxJw8"},{"type":"text","value":" of blog posts, so I found the relevant AST for what this looks like at the following locations:","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"NP4hjb6DwX"}],"key":"ONBasxdm65"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":60,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"mLSToAEJg0"},{"type":"link","url":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"list items documentation","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"KHuze51fsM"}],"urlSource":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","key":"S8QVgXMLwv"},{"type":"text","value":" showed me the AST for lists.","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"s8lPXGarH0"}],"key":"aTTfpgUzeL"},{"type":"listItem","spread":true,"position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"vH4JcFJoGL"},{"type":"link","url":"https://mystmd.org/guide/typography#definition-lists","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"Definition lists documentation","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"jCPhLeXMxV"}],"urlSource":"https://mystmd.org/guide/typography#definition-lists","key":"uekdIcbmdE"},{"type":"text","value":" had sample AST for an internal link.","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"xyXiVoFOhn"}],"key":"LEN9MF0LUt"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"CAzBTkGgrL"},{"type":"link","url":"https://mystmd.org/guide/typography#inline-text-formatting","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"Inline text formatting documentation","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"UkofKob05G"}],"urlSource":"https://mystmd.org/guide/typography#inline-text-formatting","key":"b1Mn2PpK1i"},{"type":"text","value":" had examples for things like bold, italics, etc.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"d591vRRa9L"}],"key":"IsgXnx3GjQ"}],"key":"KoVh50fziF"},{"type":"heading","depth":2,"position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Turning this into a Python plugin for MyST","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"Syg8cWgn0w"}],"identifier":"turning-this-into-a-python-plugin-for-myst","label":"Turning this into a Python plugin for MyST","html_id":"turning-this-into-a-python-plugin-for-myst","implicit":true,"key":"eIKnFxOWG9"},{"type":"paragraph","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"With this in mind, I wrote a little Python extension that:","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"df5gM3ZiVX"}],"key":"h3zB67cC1X"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":68,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"children":[{"type":"text","value":"At build time, parses all of my blog post markdown files and extracts metadata from their YAML headers.","position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"key":"yRYc7KgYwt"}],"key":"djRMuGg6kc"},{"type":"listItem","spread":true,"position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"Defines a ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"UBuDeM83pB"},{"type":"inlineCode","value":"bloglist","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"hdiXtQUKVo"},{"type":"text","value":" directive that will insert a list of blog posts where it exists.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"Gl7ZePQG3Q"}],"key":"kPJPRPlpxA"},{"type":"listItem","spread":true,"position":{"start":{"line":70,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"text","value":"Manually converts the blog post metadata into MyST AST that it prints to ","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"IF07WtTGUg"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"m9KxOFI31X"},{"type":"text","value":".","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"cEN9Wpajfc"}],"key":"YuLbuAGTom"}],"key":"TtXB1xCC9G"},{"type":"paragraph","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"As a result, when I call the directive in my blog, it will ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"FkKCheLHb3"},{"type":"emphasis","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"replace the directive with whatever AST is spit out by the Python script","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"G7oqn5qIBt"}],"key":"gt5ZSBarHu"},{"type":"text","value":". You can take a look at ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"snXGtg0Ywi"},{"type":"link","url":"/build/blogpost-2f0870d611f9d0949b94bbedeed048bf.py","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"the entire Python script here","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"QMZxp8RmBF"}],"urlSource":"../../src/blogpost.py","static":true,"protocol":"file","key":"X0qjYIyhkR"},{"type":"text","value":".","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"WLGRMeoFkW"}],"key":"QFgszveG9H"},{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"Now I can insert lists of blog posts wherever I like, for example here‚Äôs a list of the latest three:","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"qFW0VSniZQ"}],"key":"Rb5qa0SH51"},{"type":"card","url":"/blog/2024/bluesky","children":[{"type":"cardTitle","children":[{"type":"text","value":"How I'm trying to use BlueSky without getting burned again","key":"t9tRxki9sh"}],"key":"EatT3WnquS"},{"type":"paragraph","children":[{"type":"text","value":"Some quick thoughts on moving from Twitter/X to BlueSky and how I'll try to use social media after being burned once by Twitter.\n","key":"asONZLux6Y"}],"key":"X6faq8Mpnu"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"JKZbcw1TXi"}],"key":"S8NTP5z98B"},{"type":"text","value":"November 22, 2024 | ","key":"A0bbfCtiPQ"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"jNwWUEMMev"}],"key":"rwc1CEUEA4"},{"type":"text","value":"Chris Holdgraf","key":"mLd5EuUYIR"}],"key":"bpw1q20L39"}],"urlSource":"/blog/2024/bluesky","key":"zQ1tdmVpJ4"},{"type":"card","url":"/blog/2024/blog-list","children":[{"type":"cardTitle","children":[{"type":"text","value":"Better blog lists with the MyST AST","key":"M8VTFALrEG"}],"key":"vWlHeVZN4o"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\nOn my journey to learn more about writing with [the new MyST engine](https:///mystmd.org), I built upon [my recent update to my blog infrastructure](./programmatic-myst-with-jupyter.md) and made some improvements to my blog post list.\nHere's what it looks like now:\n\n````{note} Click here to see how it looks now\n:class: dropdown\n```{postlist}\n:number: 3\n```\n````\n\nHere's a quick rundown","key":"rMHxHIFKES"}],"key":"Qe1RCDt0Bw"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"fQ669SFEsj"}],"key":"QkrKVrXNit"},{"type":"text","value":"November 09, 2024 | ","key":"A86q4umTaA"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"pIIZjk7gqq"}],"key":"EEy2NN9pGZ"},{"type":"text","value":"Chris Holdgraf","key":"emTRnTeieG"}],"key":"qbl32XgdnK"}],"urlSource":"/blog/2024/blog-list","key":"SdbwG6LznP"},{"type":"card","url":"/blog/2024/programmatic-myst-with-jupyter","children":[{"type":"cardTitle","children":[{"type":"text","value":"Generate MyST with Jupyter and insert it into content programmatically","key":"mC8eDB8Ee7"}],"key":"sYEOXa3Dm7"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\n\nWhile I've been [converting my blog to use the new MyST engine](./mystmd-with-the-blog.md), I discovered a useful MyST feature. It's not yet possible to [natively parse Jupyter Markdown outputs as MyST](https://github.com/jupyter-book/mystmd/issues/1026) but there's a workaround if you don't mind generating a temporary file.\n\nThe trick is to _write to a temporary file_","key":"rGMOevkjqe"}],"key":"M8lmco6S58"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"e7btcLBPpE"}],"key":"J7xpMWnnDP"},{"type":"text","value":"November 04, 2024 | ","key":"MzuSrMOtrz"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"mwpwfCzxe7"}],"key":"SzOM7PGpkt"},{"type":"text","value":"Chris Holdgraf","key":"QOfvA1Ye64"}],"key":"sGyRErfpis"}],"urlSource":"/blog/2024/programmatic-myst-with-jupyter","key":"nTyJV5g9Pd"},{"type":"heading","depth":2,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Adding an RSS feed","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"laqY5nyqO0"}],"identifier":"adding-an-rss-feed","label":"Adding an RSS feed","html_id":"adding-an-rss-feed","implicit":true,"key":"Cz1u78WHRO"},{"type":"paragraph","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"text","value":"Because I‚Äôm running Python to define my MyST plugin, I can also use Python to build a custom RSS feed! This was relatively easy since I‚Äôd already parsed the metadata from each file.","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"key":"HIQLYnMvFZ"}],"key":"ENE8wkD8eG"},{"type":"paragraph","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"I found ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"tD65hVOZsM"},{"type":"link","url":"https://github.com/lkiesow/python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"the ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"Gj3QG5TKGH"},{"type":"inlineCode","value":"python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"nGaIKbkVAQ"},{"type":"text","value":" package","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"Ze0CQ1XeAg"}],"urlSource":"https://github.com/lkiesow/python-feedgen","error":true,"key":"fLGpjdgRyR"},{"type":"text","value":", which is a little helper package for generating RSS feeds in Python. Since my MyST plugin was already written in Python, I just added a few more lines to do so.","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"mNbWDPjFG5"}],"key":"c5SRdf6JbY"},{"type":"admonition","kind":"note","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Click to see the whole Python plugin script","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"BVR4FnjzXs"}],"key":"B5SNe0SObg"},{"type":"include","file":"../../src/blogpost.py","literal":true,"filter":{},"children":[{"type":"code","value":"#!/usr/bin/env python3\nimport argparse\nimport json\nimport sys\nfrom yaml import safe_load\nfrom pathlib import Path\nimport pandas as pd\nfrom feedgen.feed import FeedGenerator\nimport unist as u\n\nDEFAULTS = {\"number\": 10}\n\nroot = Path(__file__).parent.parent\n\n# Aggregate all posts from the markdown and ipynb files\nposts = []\nfor ifile in root.rglob(\"blog/**/*.md\"):\n    if \"drafts\" in str(ifile):\n        continue\n\n    text = ifile.read_text()\n    try:\n        _, meta, content = text.split(\"---\", 2)\n    except Exception:\n        print(f\"Skipping file with error: {ifile}\", file=sys.stderr)\n        continue\n\n    # Load in YAML metadata\n    meta = safe_load(meta)\n    meta[\"path\"] = ifile.relative_to(root).with_suffix(\"\")\n    if \"title\" not in meta:\n        lines = text.splitlines()\n        for ii in lines:\n            if ii.strip().startswith(\"#\"):\n                meta[\"title\"] = ii.replace(\"#\", \"\").strip()\n                break\n    \n    # Summarize content\n    skip_lines = [\"#\", \"--\", \"%\", \"++\"]\n    content = \"\\n\".join(ii for ii in content.splitlines() if not any(ii.startswith(char) for char in skip_lines))\n    N_WORDS = 50\n    words = \" \".join(content.split(\" \")[:N_WORDS])\n    if not \"author\" in meta or not meta[\"author\"]:\n        meta[\"author\"] = \"Chris Holdgraf\"\n    meta[\"content\"] = meta.get(\"description\", words)\n    posts.append(meta)\nposts = pd.DataFrame(posts)\nposts[\"date\"] = pd.to_datetime(posts[\"date\"]).dt.tz_localize(\"US/Pacific\")\nposts = posts.dropna(subset=[\"date\"])\nposts = posts.sort_values(\"date\", ascending=False)\n\n# Generate an RSS feed\nfg = FeedGenerator()\nfg.id(\"http://chrisholdgraf.com\")\nfg.title(\"Chris Holdgraf's blog\")\nfg.author({\"name\": \"Chris Holdgraf\", \"email\": \"choldgraf@gmail.com\"})\nfg.link(href=\"http://chrisholdgraf.com\", rel=\"alternate\")\nfg.logo(\"http://chrisholdgraf.com/_static/profile.jpg\")\nfg.subtitle(\"Chris' personal blog!\")\nfg.link(href=\"http://chrisholdgraf.com/rss.xml\", rel=\"self\")\nfg.language(\"en\")\n\n# Add all my posts to it\nfor ix, irow in posts.iterrows():\n    fe = fg.add_entry()\n    fe.id(f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.published(irow[\"date\"])\n    fe.title(irow[\"title\"])\n    fe.link(href=f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.content(content=irow[\"content\"])\n\n# Write an RSS feed with latest posts\nfg.atom_file(root / \"atom.xml\", pretty=True)\nfg.rss_file(root / \"rss.xml\", pretty=True)\n\nplugin = {\n    \"name\": \"Blog Post list\",\n    \"directives\": [\n        {\n            \"name\": \"postlist\",\n            \"doc\": \"An example directive for showing a nice random image at a custom size.\",\n            \"alias\": [\"bloglist\"],\n            \"arg\": {},\n            \"options\": {\n                \"number\": {\n                    \"type\": \"int\",\n                    \"doc\": \"The number of posts to include\",\n                }\n            },\n        }\n    ],\n}\n\nchildren = []\nfor ix, irow in posts.iterrows():\n    children.append(\n        {\n          \"type\": \"card\",\n          \"url\": f\"/{irow['path'].with_suffix('')}\",\n          \"children\": [\n            {\n              \"type\": \"cardTitle\",\n              \"children\": [u.text(irow[\"title\"])]\n            },\n            {\n              \"type\": \"paragraph\",\n              \"children\": [u.text(irow['content'])]\n            },\n            {\n              \"type\": \"footer\",\n              \"children\": [\n                u.strong([u.text(\"Date: \")]), u.text(f\"{irow['date']:%B %d, %Y} | \"),\n                u.strong([u.text(\"Author: \")]), u.text(f\"{irow['author']}\"),\n              ]\n            },\n          ]\n        }\n    )\n\n\ndef declare_result(content):\n    \"\"\"Declare result as JSON to stdout\n\n    :param content: content to declare as the result\n    \"\"\"\n\n    # Format result and write to stdout\n    json.dump(content, sys.stdout, indent=2)\n    # Successfully exit\n    raise SystemExit(0)\n\n\ndef run_directive(name, data):\n    \"\"\"Execute a directive with the given name and data\n\n    :param name: name of the directive to run\n    :param data: data of the directive to run\n    \"\"\"\n    assert name == \"postlist\"\n    opts = data[\"node\"].get(\"options\", {})\n    number = int(opts.get(\"number\", DEFAULTS[\"number\"]))\n    output = children[:number]\n    return output\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    group = parser.add_mutually_exclusive_group()\n    group.add_argument(\"--role\")\n    group.add_argument(\"--directive\")\n    group.add_argument(\"--transform\")\n    args = parser.parse_args()\n\n    if args.directive:\n        data = json.load(sys.stdin)\n        declare_result(run_directive(args.directive, data))\n    elif args.transform:\n        raise NotImplementedError\n    elif args.role:\n        raise NotImplementedError\n    else:\n        declare_result(plugin)\n","lang":"python","filename":"blogpost.py","key":"NtNJkDjkgF"}],"key":"X9bAXoaFza"}],"key":"qnDZEriUVj"},{"type":"paragraph","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"Annoyingly, you cannot just tell MyST to put a file in a particular location (see ","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"mFz7Pg3jTJ"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1196","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"children":[{"type":"text","value":"jupyter‚Äã-book‚Äã/mystmd‚Äã#1196","key":"CoJjGCKUI7"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1196","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1196"},"internal":false,"protocol":"github","key":"oyYLmVCsZn"},{"type":"text","value":" tracking this one). So I had to manually move this file to my build output folder in my GitHub action. Hopefully this functionality gets updated soon. Here‚Äôs what that looks like:","position":{"start":{"line":92,"column":1},"end":{"line":92,"column":1}},"key":"I5868kZeP0"}],"key":"yhyfl9KHOg"},{"type":"include","file":"../../.github/workflows/deploy.yml","literal":true,"filter":{"startAt":"# Move RSS feeds to output folder","endAt":"# If we've pushed to main"},"children":[{"type":"code","value":"    # Move RSS feeds to output folder\n    - name: Move RSS feeds\n      run: |\n        cp atom.xml _build/html/atom.xml\n        cp rss.xml _build/html/rss.xml\n\n    # If we've pushed to main, push the book's HTML to github-pages","lang":"yaml","filename":"deploy.yml","key":"M5NeHQQYK4"}],"key":"aJKO8hyzNS"}],"key":"XvTDhAHBQm"}],"key":"m7bzVbZzSW"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"How I‚Äôm trying to use BlueSky without getting burned again","url":"/blog/2024/bluesky","group":"2024"},"next":{"title":"Generate MyST with Jupyter and insert it into content programmatically","url":"/blog/2024/programmatic-myst-with-jupyter","group":"2024"}}},"domain":"http://localhost:3000"}