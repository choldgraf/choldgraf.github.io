{"kind":"Notebook","sha256":"7a080dd817d781acf0afcc576ec3c3c02b23830057d1df906659d294df926443","slug":"blog.2024.mystmd-with-the-blog","location":"/blog/2024/mystmd-with-the-blog.md","dependencies":[],"frontmatter":{"title":"Re-building my blog with MySTMD","date":"2024-11-01","kernelspec":{"name":"python3","display_name":"Python 3"},"github":"https://github.com/choldgraf/choldgraf.github.io","exports":[{"format":"md","filename":"mystmd-with-the-blog.md","url":"/build/mystmd-with-the-blog-3fecaa2411d26b8b657aacd1627e9522.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Wow it has been a long time since I‚Äôve last-written here. It turns out that having two small children and a very demanding job means you don‚Äôt have as much time for blogging. But that‚Äôs a whole different blog post...","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"lQDg8hFu0f"}],"key":"CG7o4pCHTW"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"I‚Äôve decided to convert my blog to use the new ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"yOeOZ9x7PR"},{"type":"link","url":"https://mystmd.org","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"MyST Document Engine","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"dYSaBIiose"}],"urlSource":"https://mystmd.org","key":"hCbolHDxdq"},{"type":"text","value":". This is part of a dogfooding experiment to see what‚Äôs possible with MyST, since it‚Äôs where the Jupyter Book project is heading, and I want to see how close to ‚Äúproduction-ready‚Äù we are already.","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"zRQwSsADJI"}],"key":"prjuNDNNFN"},{"type":"paragraph","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"children":[{"type":"text","value":"To begin, I wanted to share a few things I learned today as I tried to re-tool my old blog for use with MyST MD.","position":{"start":{"line":13,"column":1},"end":{"line":13,"column":1}},"key":"jCCc1BEsix"}],"key":"oADKXGjJ54"},{"type":"heading","depth":2,"position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"There‚Äôs no blog functionality in MyST yet","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"hBowuahNhJ"}],"identifier":"theres-no-blog-functionality-in-myst-yet","label":"There‚Äôs no blog functionality in MyST yet","html_id":"theres-no-blog-functionality-in-myst-yet","implicit":true,"key":"D4InT1fx1P"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"As MyST is still quite young, there‚Äôs no out-of-the-box functionality for MyST (see ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"JpGsIozjTs"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/840","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"jupyter‚Äã-book‚Äã/mystmd‚Äã#840","key":"Enbr3shvNy"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/840","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"840"},"internal":false,"protocol":"github","key":"bz1wNdW4aW"},{"type":"text","value":" for the issue tracking that). So, I wanted to accomplish at least two things with my initial transfer:","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"VCySfmJVpd"}],"key":"aFo9OyfHEp"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":19,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"children":[{"type":"text","value":"Generate a list of recent blog posts that I can insert into a few places in my site.","position":{"start":{"line":19,"column":1},"end":{"line":19,"column":1}},"key":"NAXGenoBVD"}],"key":"a1pcTUCdLV"},{"type":"listItem","spread":true,"position":{"start":{"line":20,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Generate an RSS feed that keeps the same URLs, content, etc.","position":{"start":{"line":20,"column":1},"end":{"line":20,"column":1}},"key":"G7pF0EBudU"}],"key":"n5FDRbXlIz"}],"key":"ndRF7Zb5Mr"},{"type":"heading","depth":2,"position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"children":[{"type":"text","value":"What didn‚Äôt work: using the parsed MyST documents","position":{"start":{"line":22,"column":1},"end":{"line":22,"column":1}},"key":"OVoxjvtXWq"}],"identifier":"what-didnt-work-using-the-parsed-myst-documents","label":"What didn‚Äôt work: using the parsed MyST documents","html_id":"what-didnt-work-using-the-parsed-myst-documents","implicit":true,"key":"F6J2ulRm6S"},{"type":"paragraph","position":{"start":{"line":24,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"My first thought was to use a MyST plugin that defines a directive I could use to insert a list of blog posts.\nHowever, I learned that MyST plugins have no way to access all of the parsed documents at build time (see ","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"qfvv5PFqNy"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1616","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"children":[{"type":"text","value":"this issue about accessing all of the parsed documents","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"XydFX4J3cg"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1616","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1616"},"internal":false,"protocol":"github","key":"rFQGCe6KJ0"},{"type":"text","value":" to track that one).","position":{"start":{"line":24,"column":1},"end":{"line":24,"column":1}},"key":"HefgoDdYwJ"}],"key":"GEtwDKStRq"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Fortunately, ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"nvQXbjsidH"},{"type":"link","url":"https://github.com/rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"inlineCode","value":"@rowanc1","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"LYFwQvB5T4"}],"urlSource":"https://github.com/rowanc1","error":true,"key":"kwzF1g2lrL"},{"type":"text","value":" made me realize that I could just ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"fi3VBK68WU"},{"type":"emphasis","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"manually","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"LqGZwDQM1j"}],"key":"CHRU1O7a33"},{"type":"text","value":" parse my blog files and use that to build up something like a blog list. So that‚Äôs what the rest of this post is about.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"JflB2CKRTt"}],"key":"y1wZZnqyku"},{"type":"heading","depth":2,"position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"You can run scripts in JavaScript as part of your MyST build","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"t3Ln882yJY"}],"identifier":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","label":"You can run scripts in JavaScript as part of your MyST build","html_id":"you-can-run-scripts-in-javascript-as-part-of-your-myst-build","implicit":true,"key":"GNmEgEB1PT"},{"type":"paragraph","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"g8jmqG123p"},{"type":"link","url":"https://mystmd.org/guide/javascript-plugins","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"MySTMD plugins documentation","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"X6LE982ZKa"}],"urlSource":"https://mystmd.org/guide/javascript-plugins","key":"eV7lh92WG0"},{"type":"text","value":" shows a few examples for how to define your own MyST plugins. These are little JavaScript files that get executed every time you build your MyST site.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"iESq4AU1nj"}],"key":"bTPFluGsQV"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"The easiest thing to do here would be to write a JavaScript plugin for MyST that I can attach to my site build. You could use a JS library to parse the markdown files in ","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"BlEopIY2eG"},{"type":"inlineCode","value":"blog/","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"J4uNHrUz6Y"},{"type":"text","value":", grab their YAML metadata, and return MyST AST structure that would be inserted into the document. But I‚Äôm not too comfortable with JavaScript, and I found two ways that are much hackier, but much more accessible for somebody that is comfortable with Python üòé.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"IhUU3WWPtv"}],"key":"lsqzZpzQ1H"},{"type":"heading","depth":2,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"Write a MyST extension in Python","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"yV019biqNS"}],"identifier":"write-a-myst-extension-in-python","label":"Write a MyST extension in Python","html_id":"write-a-myst-extension-in-python","implicit":true,"key":"taqgEi6YMW"},{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"I bet most folks don‚Äôt know that you can write MyST extensions entirely in Python (or any other language that you can execute locally). ","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"jiYvXs2k4t"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Here is the MyST documentation on writing an executable MyST extension","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"cf2m2VHFDn"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"ZIRT0b5Yov"},{"type":"text","value":".","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"KrmA3N5Dxi"}],"key":"j9g9akZPjl"},{"type":"paragraph","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"Executable extensions are treated like a black box in MyST - the MyST build process simply ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"SeHVCQ72Rc"},{"type":"emphasis","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"executes","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"xDJrOM4Dyi"}],"key":"xFKQG9FYoj"},{"type":"text","value":" a file that you specify in ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"qyTAIdikrl"},{"type":"inlineCode","value":"myst.yml","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"ersfK40TPX"},{"type":"text","value":", and treats anything printed to ","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"hGIrBQzTh9"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"xRXBXWEgOS"},{"type":"text","value":" as MyST AST that will be inserted back into the MyST document.","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"yPCyI5wA0e"}],"key":"dPheftFmzC"},{"type":"admonition","kind":"note","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Check out the examples","position":{"start":{"line":41,"column":1},"end":{"line":41,"column":1}},"key":"P1Egt07VqO"}],"key":"IXYWozbs4P"},{"type":"paragraph","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"There seem to be some specific ways to define the arguments that your script takes, based on whether a role, directive, or transform triggers it. See the ","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"bZ6VDV1UqZ"},{"type":"link","url":"https://mystmd.org/guide/executable-plugins","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"examples in the executable plugin docs","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"Lhproh827b"}],"urlSource":"https://mystmd.org/guide/executable-plugins","key":"IpNi4XTHLI"},{"type":"text","value":" for inspiration.","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"EC2pnYpGCr"}],"key":"j7uap2YFTp"}],"key":"rAtQva8xTX"},{"type":"heading","depth":2,"position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"children":[{"type":"text","value":"How do you know what MyST AST looks like?","position":{"start":{"line":45,"column":1},"end":{"line":45,"column":1}},"key":"HbmSEKVlFx"}],"identifier":"how-do-you-know-what-myst-ast-looks-like","label":"How do you know what MyST AST looks like?","html_id":"how-do-you-know-what-myst-ast-looks-like","implicit":true,"key":"GkWVRw9xQA"},{"type":"paragraph","position":{"start":{"line":47,"column":1},"end":{"line":48,"column":1}},"children":[{"type":"text","value":"I mention ‚Äúall you need to do is output MyST AST‚Äù, but what does that even mean?\nThe MyST AST is the abstract structure of a MyST document. It has all of the relevant information about the content in a document, as well as all the semantic tags for different ","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"EsvVD242mI"},{"type":"emphasis","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"children":[{"type":"text","value":"types","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"qbLFlVPnId"}],"key":"Cb2vbrBVdW"},{"type":"text","value":" of content that can exist (e.g., ‚Äúitalics‚Äù, or ‚Äúadmonition boxes‚Äù).","position":{"start":{"line":47,"column":1},"end":{"line":47,"column":1}},"key":"Lhmk0vy8Ny"}],"key":"LOaFL1O0Br"},{"type":"paragraph","position":{"start":{"line":50,"column":1},"end":{"line":51,"column":1}},"children":[{"type":"text","value":"When a MyST Markdown document is parsed, the result is MyST AST. You can see a ton of examples of AST for various MyST markdown in ","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"stiepcUeUP"},{"type":"link","url":"https://mystmd.org/guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"children":[{"type":"text","value":"the MyST guide","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"BjVXB6zTqI"}],"urlSource":"https://mystmd.org/guide","key":"SCbfmlViL0"},{"type":"text","value":".\nJust look for the litte ‚Äúinteractive demo‚Äù boxes that show off sample MyST Markdown.","position":{"start":{"line":50,"column":1},"end":{"line":50,"column":1}},"key":"IfX2zkfHYJ"}],"key":"MTPKbCCZ2g"},{"type":"admonition","kind":"tip","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Use the JSON representation of the AST","position":{"start":{"line":53,"column":1},"end":{"line":53,"column":1}},"key":"wVsMtcFxoN"}],"key":"R3EonTrBBx"},{"type":"paragraph","position":{"start":{"line":54,"column":1},"end":{"line":55,"column":1}},"children":[{"type":"text","value":"You‚Äôll note that clicking the AST button gives you a few different ways to view it.\nBy default, you‚Äôll see YAML, but JSON is closer to the structure that MyST plugins expect you to output. In my case, I grabbed the JSON output, and converted it for use as a Python dictionary (this basically just meant turning ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"E98Vy2upoc"},{"type":"inlineCode","value":"true","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"Y9jIUryxek"},{"type":"text","value":" into ","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"D5NRaVaWO9"},{"type":"inlineCode","value":"True","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"oZQwWq0W2c"},{"type":"text","value":").","position":{"start":{"line":54,"column":1},"end":{"line":54,"column":1}},"key":"SIGlobDf6A"}],"key":"Scr8Wp7khi"}],"key":"WXR1C6y71v"},{"type":"paragraph","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"In my case, I needed a ","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"KSqAe7z4hY"},{"type":"emphasis","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"children":[{"type":"text","value":"list","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"XSRNTevpQJ"}],"key":"nqnrLdcG4G"},{"type":"text","value":" of blog posts, so I found the relevant AST for what this looks like at the following locations:","position":{"start":{"line":58,"column":1},"end":{"line":58,"column":1}},"key":"XKCA52VJbN"}],"key":"qt3afFmRlt"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":60,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"JytVVPKHtP"},{"type":"link","url":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"children":[{"type":"text","value":"list items documentation","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"d9hcACqJTD"}],"urlSource":"https://mystmd.org/guide/typography#bullet-points-and-numbered-lists","key":"sb45bm50CK"},{"type":"text","value":" showed me the AST for lists.","position":{"start":{"line":60,"column":1},"end":{"line":60,"column":1}},"key":"hObdRY6B6U"}],"key":"TziIzHNxOj"},{"type":"listItem","spread":true,"position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"jGzfkZOET5"},{"type":"link","url":"https://mystmd.org/guide/typography#definition-lists","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"children":[{"type":"text","value":"Definition lists documentation","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"NCqWhlKkVy"}],"urlSource":"https://mystmd.org/guide/typography#definition-lists","key":"Tlg5bwi28Q"},{"type":"text","value":" had sample AST for an internal link.","position":{"start":{"line":61,"column":1},"end":{"line":61,"column":1}},"key":"YJxEVgM1o4"}],"key":"J5huuNSvum"},{"type":"listItem","spread":true,"position":{"start":{"line":62,"column":1},"end":{"line":63,"column":1}},"children":[{"type":"text","value":"The ","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"g077i7WP5d"},{"type":"link","url":"https://mystmd.org/guide/typography#inline-text-formatting","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"children":[{"type":"text","value":"Inline text formatting documentation","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"hiInBXWx5t"}],"urlSource":"https://mystmd.org/guide/typography#inline-text-formatting","key":"M9pjHe2a2U"},{"type":"text","value":" had examples for things like bold, italics, etc.","position":{"start":{"line":62,"column":1},"end":{"line":62,"column":1}},"key":"iJrPKYF2Gm"}],"key":"lulLAx79v3"}],"key":"cyrZT4IkTO"},{"type":"heading","depth":2,"position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"children":[{"type":"text","value":"Turning this into a Python plugin for MyST","position":{"start":{"line":64,"column":1},"end":{"line":64,"column":1}},"key":"VyvG1M0kMR"}],"identifier":"turning-this-into-a-python-plugin-for-myst","label":"Turning this into a Python plugin for MyST","html_id":"turning-this-into-a-python-plugin-for-myst","implicit":true,"key":"np2m2dl7WR"},{"type":"paragraph","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"children":[{"type":"text","value":"With this in mind, I wrote a little Python extension that:","position":{"start":{"line":66,"column":1},"end":{"line":66,"column":1}},"key":"vzhc0ofXfi"}],"key":"OfQPDHROWN"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":68,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"children":[{"type":"text","value":"At build time, parses all of my blog post markdown files and extracts metadata from their YAML headers.","position":{"start":{"line":68,"column":1},"end":{"line":68,"column":1}},"key":"MN1g34Wd1N"}],"key":"LkZvWZ4L2f"},{"type":"listItem","spread":true,"position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"children":[{"type":"text","value":"Defines a ","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"cAdVACFfpQ"},{"type":"inlineCode","value":"bloglist","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"GSYayicGLS"},{"type":"text","value":" directive that will insert a list of blog posts where it exists.","position":{"start":{"line":69,"column":1},"end":{"line":69,"column":1}},"key":"pXQSOhtgwR"}],"key":"r8vMwwUom4"},{"type":"listItem","spread":true,"position":{"start":{"line":70,"column":1},"end":{"line":71,"column":1}},"children":[{"type":"text","value":"Manually converts the blog post metadata into MyST AST that it prints to ","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"Fe1UlBXsgr"},{"type":"inlineCode","value":"stdout","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"cQWktkwaYw"},{"type":"text","value":".","position":{"start":{"line":70,"column":1},"end":{"line":70,"column":1}},"key":"W6poi1kP1f"}],"key":"BHwHjXb9CB"}],"key":"VrHqsT2aXP"},{"type":"paragraph","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"As a result, when I call the directive in my blog, it will ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"ACp97SEwZk"},{"type":"emphasis","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"replace the directive with whatever AST is spit out by the Python script","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"CDxlbYh6al"}],"key":"Akx9fzVnDw"},{"type":"text","value":". You can take a look at ","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"HHq1LxnFgi"},{"type":"link","url":"/build/blogpost-f5b5cb06651615db3e53556178a2578a.py","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"children":[{"type":"text","value":"the entire Python script here","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"QbNrX8lwM4"}],"urlSource":"../../src/blogpost.py","static":true,"protocol":"file","key":"XuH6XO4fSM"},{"type":"text","value":".","position":{"start":{"line":72,"column":1},"end":{"line":72,"column":1}},"key":"nWIMFc6AlX"}],"key":"aoFRyfNQUc"},{"type":"paragraph","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"children":[{"type":"text","value":"Now I can insert lists of blog posts wherever I like, for example here‚Äôs a list of the latest three:","position":{"start":{"line":74,"column":1},"end":{"line":74,"column":1}},"key":"JZsMjIoKTx"}],"key":"eW5OmFhHQA"},{"type":"list","ordered":false,"spread":false,"children":[{"type":"listItem","spread":true,"children":[{"type":"listItem","spread":true,"children":[{"type":"link","url":"/blog/2024/mystmd-with-the-blog","children":[{"type":"text","value":"Re-building my blog with MySTMD","key":"zfo4Ru6Tqg"}],"urlSource":"/blog/2024/mystmd-with-the-blog","key":"W3DYbVIZjr"},{"type":"text","value":" - November 01, 2024","key":"GvfWJvLaGS"}],"key":"Rx3bH2ug8K"},{"type":"listItem","spread":true,"children":[{"type":"link","url":"/blog/2023/ai-for-good","children":[{"type":"text","value":"A few random opportunities in AI for Social Good","key":"PcHVCtag7U"}],"urlSource":"/blog/2023/ai-for-good","key":"Jkp45cd1s2"},{"type":"text","value":" - October 02, 2023","key":"wc1YA4v0fh"}],"key":"WCOxGVBo7t"},{"type":"listItem","spread":true,"children":[{"type":"link","url":"/blog/2023/social-directive","children":[{"type":"text","value":"A Sphinx directive for social media embeds","key":"Ifpzah0695"}],"urlSource":"/blog/2023/social-directive","key":"OkIAyj2FH7"},{"type":"text","value":" - February 15, 2023","key":"qJ1zXM9kBE"}],"key":"sMFPsxjnLl"}],"key":"ZTATJGqCbL"}],"key":"AsDZURmnHi"},{"type":"heading","depth":2,"position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"children":[{"type":"text","value":"Adding an RSS feed","position":{"start":{"line":80,"column":1},"end":{"line":80,"column":1}},"key":"YrK3FD553r"}],"identifier":"adding-an-rss-feed","label":"Adding an RSS feed","html_id":"adding-an-rss-feed","implicit":true,"key":"BmRPSUtepU"},{"type":"paragraph","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"children":[{"type":"text","value":"Because I‚Äôm running Python to define my MyST plugin, I can also use Python to build a custom RSS feed! This was relatively easy since I‚Äôd already parsed the metadata from each file.","position":{"start":{"line":82,"column":1},"end":{"line":82,"column":1}},"key":"khv2ZMm5lT"}],"key":"xR1tSwiG1D"},{"type":"paragraph","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"I found ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"dNZ1mzrBnE"},{"type":"link","url":"https://github.com/lkiesow/python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"children":[{"type":"text","value":"the ","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"BnQlxGrdkV"},{"type":"inlineCode","value":"python-feedgen","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"wCwbjkSJSC"},{"type":"text","value":" package","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"cUqR6ipawI"}],"urlSource":"https://github.com/lkiesow/python-feedgen","error":true,"key":"ioTiaY0zaK"},{"type":"text","value":", which is a little helper package for generating RSS feeds in Python. Since my MyST plugin was already written in Python, I just added a few more lines to do so.","position":{"start":{"line":84,"column":1},"end":{"line":84,"column":1}},"key":"IksxiOZ7Kd"}],"key":"OxZ5Bb2lMJ"},{"type":"admonition","kind":"note","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Click to see the whole Python plugin script","position":{"start":{"line":86,"column":1},"end":{"line":86,"column":1}},"key":"qxyoAKwkfR"}],"key":"y3mZeTJWrU"},{"type":"include","file":"../../src/blogpost.py","literal":true,"filter":{},"children":[{"type":"code","value":"#!/usr/bin/env python3\nimport argparse\nimport json\nimport sys\nfrom yaml import safe_load\nfrom pathlib import Path\nimport pandas as pd\nfrom feedgen.feed import FeedGenerator\n\nDEFAULTS = {\"number\": 10}\n\nroot = Path(__file__).parent.parent\n\n# Aggregate all posts from the markdown and ipynb files\nposts = []\nfor ifile in root.rglob(\"blog/**/*.md\"):\n    text = ifile.read_text()\n    yaml = safe_load(text.split(\"---\")[1])\n    yaml[\"path\"] = ifile.relative_to(root).with_suffix(\"\")\n    if \"title\" not in yaml:\n        lines = text.splitlines()\n        for ii in lines:\n            if ii.strip().startswith(\"#\"):\n                yaml[\"title\"] = ii.replace(\"#\", \"\").strip()\n                break\n    content = text.split(\"---\", 2)[-1]\n    content = \"\\n\".join(ii for ii in content.splitlines() if not ii.startswith(\"#\"))\n    N_WORDS = 100\n    words = \" \".join(content.split(\" \")[:N_WORDS])\n    yaml[\"content\"] = yaml.get(\"description\", words)\n    posts.append(yaml)\nposts = pd.DataFrame(posts)\nposts[\"date\"] = pd.to_datetime(posts[\"date\"]).dt.tz_localize(\"US/Pacific\")\nposts = posts.dropna(subset=[\"date\"])\nposts = posts.sort_values(\"date\", ascending=False)\n\n# Generate an RSS feed\nfg = FeedGenerator()\nfg.id(\"http://chrisholdgraf.com\")\nfg.title(\"Chris Holdgraf's blog\")\nfg.author({\"name\": \"Chris Holdgraf\", \"email\": \"choldgraf@gmail.com\"})\nfg.link(href=\"http://chrisholdgraf.com\", rel=\"alternate\")\nfg.logo(\"http://chrisholdgraf.com/_static/profile.jpg\")\nfg.subtitle(\"Chris' personal blog!\")\nfg.link(href=\"http://chrisholdgraf.com/rss.xml\", rel=\"self\")\nfg.language(\"en\")\n\n# Add all my posts to it\nfor ix, irow in posts.iterrows():\n    fe = fg.add_entry()\n    fe.id(f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.published(irow[\"date\"])\n    fe.title(irow[\"title\"])\n    fe.link(href=f\"http://chrisholdgraf.com/{irow['path']}\")\n    fe.content(content=irow[\"content\"])\n\n# Write an RSS feed with latest posts\nfg.atom_file(root / \"../atom.xml\", pretty=True)\nfg.rss_file(root / \"rss.xml\", pretty=True)\n\nplugin = {\n    \"name\": \"Blog Post list\",\n    \"directives\": [\n        {\n            \"name\": \"postlist\",\n            \"doc\": \"An example directive for showing a nice random image at a custom size.\",\n            \"alias\": [\"bloglist\"],\n            \"arg\": {},\n            \"options\": {\n                \"number\": {\n                    \"type\": \"int\",\n                    \"doc\": \"The number of posts to include\",\n                }\n            },\n        }\n    ],\n}\n\nchildren = []\nfor ix, irow in posts.iterrows():\n    children.append(\n        {\n            \"type\": \"listItem\",\n            \"spread\": True,\n            \"children\": [\n                {\n                    \"type\": \"link\",\n                    \"url\": f\"/{irow['path'].with_suffix('')}\",\n                    \"children\": [\n                        {\n                            \"type\": \"text\",\n                            \"value\": irow[\"title\"],\n                        }\n                    ],\n                },\n                {\"type\": \"text\", \"value\": f' - {irow[\"date\"]:%B %d, %Y}'},\n            ],\n        }\n    )\n\n\ndef declare_result(content):\n    \"\"\"Declare result as JSON to stdout\n\n    :param content: content to declare as the result\n    \"\"\"\n\n    # Format result and write to stdout\n    json.dump(content, sys.stdout, indent=2)\n    # Successfully exit\n    raise SystemExit(0)\n\n\ndef run_directive(name, data):\n    \"\"\"Execute a directive with the given name and data\n\n    :param name: name of the directive to run\n    :param data: data of the directive to run\n    \"\"\"\n    assert name == \"postlist\"\n    opts = data[\"node\"].get(\"options\", {})\n    number = int(opts.get(\"number\", DEFAULTS[\"number\"]))\n    output = (\n        {\n            \"type\": \"list\",\n            \"ordered\": False,\n            \"spread\": False,\n            \"children\": [\n                {\n                    \"type\": \"listItem\",\n                    \"spread\": True,\n                    \"children\": children[:number],\n                }\n            ],\n        },\n    )\n    return output\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    group = parser.add_mutually_exclusive_group()\n    group.add_argument(\"--role\")\n    group.add_argument(\"--directive\")\n    group.add_argument(\"--transform\")\n    args = parser.parse_args()\n\n    if args.directive:\n        data = json.load(sys.stdin)\n        declare_result(run_directive(args.directive, data))\n    elif args.transform:\n        raise NotImplementedError\n    elif args.role:\n        raise NotImplementedError\n    else:\n        declare_result(plugin)\n","lang":"python","filename":"blogpost.py","key":"i6XTMBWoHk"}],"key":"EPTRJuiYA6"}],"key":"JOkdrRcKep"}],"key":"A6NsmCPWsI"}],"key":"U9v3h9EpoA"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Blog","url":"/blog","group":"Welcome"},"next":{"title":"Generate MyST with Jupyter and insert it into content programmatically","url":"/blog/2024/programmatic-myst-with-jupyter","group":"2024"}}},"domain":"http://localhost:3000"}