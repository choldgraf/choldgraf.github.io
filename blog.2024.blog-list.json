{"kind":"Article","sha256":"498aa3801cb59100d560acf2e2f04a9449abf1bb8cc0fb33bbefa3a43c75510c","slug":"blog.2024.blog-list","location":"/blog/2024/blog-list.md","dependencies":[],"frontmatter":{"title":"Better blog lists with the MyST AST","tags":["myst","jupyter"],"authors":[{"id":"Chris Holdgraf","name":"Chris Holdgraf"}],"date":"2024-11-09","content_includes_title":false,"github":"https://github.com/choldgraf/choldgraf.github.io","thumbnail":"/build/sandbox-demo-3b0d44fec935245bf6974d0499c83f98.png","exports":[{"format":"md","filename":"blog-list.md","url":"/build/blog-list-c0f0ebb04b55db6b3b1b0322b10e3c58.md"}]},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":12,"column":1}},"children":[{"type":"text","value":"On my journey to learn more about writing with ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"joxu7nvDYy"},{"type":"link","url":"https:///mystmd.org","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"the new MyST engine","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"Z6oUgl73VT"}],"urlSource":"https:///mystmd.org","key":"x28aGBaiVe"},{"type":"text","value":", I built upon ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"ijZBXbLty8"},{"type":"link","url":"/blog/2024/programmatic-myst-with-jupyter","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"my recent update to my blog infrastructure","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"BKKMN0aKN7"}],"urlSource":"./programmatic-myst-with-jupyter.md","dataUrl":"/blog.2024.programmatic-myst-with-jupyter.json","internal":true,"protocol":"file","key":"ADNngVaQlM"},{"type":"text","value":" and made some improvements to my blog post list.\nHere’s what it looks like now:","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"xf4cVDswqn"}],"key":"boKlX3BkJz"},{"type":"admonition","kind":"note","class":"dropdown","children":[{"type":"admonitionTitle","children":[{"type":"text","value":"Click here to see how it looks now","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"T5hWU4eTgj"}],"key":"dC4KFXRaGi"},{"type":"card","url":"/blog/2024/bluesky","children":[{"type":"cardTitle","children":[{"type":"text","value":"How I'm trying to use BlueSky without getting burned again","key":"RyIradnfmP"}],"key":"dsGYQI5QlU"},{"type":"paragraph","children":[{"type":"text","value":"Some quick thoughts on moving from Twitter/X to BlueSky and how I'll try to use social media after being burned once by Twitter.\n","key":"ZsR89P8utp"}],"key":"DPVaBKd3ng"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"V9zKxLH5eC"}],"key":"cHECzKvVxh"},{"type":"text","value":"November 22, 2024 | ","key":"ytL2l9MYVf"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"T4yjq21AYc"}],"key":"OqYNNAhcQD"},{"type":"text","value":"Chris Holdgraf","key":"CdC2eiTcGO"}],"key":"y5ZFaqQjSw"}],"urlSource":"/blog/2024/bluesky","key":"sSlUW9w0Jg"},{"type":"card","url":"/blog/2024/blog-list","children":[{"type":"cardTitle","children":[{"type":"text","value":"Better blog lists with the MyST AST","key":"nYfQMvOUi8"}],"key":"QGKppn5Se3"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\nOn my journey to learn more about writing with [the new MyST engine](https:///mystmd.org), I built upon [my recent update to my blog infrastructure](./programmatic-myst-with-jupyter.md) and made some improvements to my blog post list.\nHere's what it looks like now:\n\n````{note} Click here to see how it looks now\n:class: dropdown\n```{postlist}\n:number: 3\n```\n````\n\nHere's a quick rundown","key":"mQi5AY3uFP"}],"key":"hREgykJV7q"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"kcze6YN6aS"}],"key":"RvouVIlwbf"},{"type":"text","value":"November 09, 2024 | ","key":"GGXT6r9EYf"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"XdrwqYTU9E"}],"key":"MgjDoN4eLR"},{"type":"text","value":"Chris Holdgraf","key":"Qurb3KOOuN"}],"key":"ND4NbEToZK"}],"urlSource":"/blog/2024/blog-list","key":"mvEC8NXPZR"},{"type":"card","url":"/blog/2024/programmatic-myst-with-jupyter","children":[{"type":"cardTitle","children":[{"type":"text","value":"Generate MyST with Jupyter and insert it into content programmatically","key":"CmcXAc9xNU"}],"key":"FjWbPv4HxJ"},{"type":"paragraph","children":[{"type":"text","value":"\n\n\n\nWhile I've been [converting my blog to use the new MyST engine](./mystmd-with-the-blog.md), I discovered a useful MyST feature. It's not yet possible to [natively parse Jupyter Markdown outputs as MyST](https://github.com/jupyter-book/mystmd/issues/1026) but there's a workaround if you don't mind generating a temporary file.\n\nThe trick is to _write to a temporary file_","key":"xJa2GDuVGk"}],"key":"aYPtY8Ft5D"},{"type":"footer","children":[{"type":"strong","children":[{"type":"text","value":"Date: ","key":"VgtctSCvdu"}],"key":"vZUYfHUfwq"},{"type":"text","value":"November 04, 2024 | ","key":"fUpFzjyQAo"},{"type":"strong","children":[{"type":"text","value":"Author: ","key":"pCHStppP7X"}],"key":"lowBrMAwKU"},{"type":"text","value":"Chris Holdgraf","key":"VhQMOXvQlE"}],"key":"jS9ziPmMVX"}],"urlSource":"/blog/2024/programmatic-myst-with-jupyter","key":"NKcwc0hyE5"}],"key":"dSWzZDtKdb"},{"type":"paragraph","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"children":[{"type":"text","value":"Here’s a quick rundown of what I’ve improved.","position":{"start":{"line":21,"column":1},"end":{"line":21,"column":1}},"key":"OHzDJqoSdQ"}],"key":"Qsy0M7pMUt"},{"type":"heading","depth":2,"position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"children":[{"type":"text","value":"Use the MyST sandbox to determine what AST to generate","position":{"start":{"line":23,"column":1},"end":{"line":23,"column":1}},"key":"nBl31WTZfL"}],"identifier":"use-the-myst-sandbox-to-determine-what-ast-to-generate","label":"Use the MyST sandbox to determine what AST to generate","html_id":"use-the-myst-sandbox-to-determine-what-ast-to-generate","implicit":true,"key":"SqrlP2tdTr"},{"type":"paragraph","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"children":[{"type":"text","value":"I realized that MyST cards are a first-class citizen in the AST, meaning that I should be able to generate them directly with my Python plugin. These look a lot nicer than a list of bullet points.","position":{"start":{"line":25,"column":1},"end":{"line":25,"column":1}},"key":"K0igkCAcJ6"}],"key":"Y5JxG4qfFg"},{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"However, generating MyST AST from scratch is cumbersome, so I headed over to ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"hXjjBBvnwN"},{"type":"link","url":"https://mystmd.org/sandbox","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"the MyST sandbox","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"kBbR0rmLKE"}],"urlSource":"https://mystmd.org/sandbox","key":"eMKlhYR4GN"},{"type":"text","value":" to quickly see what the AST needed to look like for card outputs.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"gSeeWIKbnO"}],"key":"if51PKeHnt"},{"type":"container","kind":"figure","children":[{"type":"image","url":"/build/sandbox-demo-3b0d44fec935245bf6974d0499c83f98.png","alt":"Using the sandbox to preview what the AST looks like.\nHere’s an example of a card directive in the MyST sandbox.","data":{"altTextIsAutoGenerated":true},"key":"P0lOWfb55O","urlSource":"images/sandbox-demo.png"},{"type":"caption","children":[{"type":"paragraph","position":{"start":{"line":30,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Using the sandbox to preview what the AST looks like.\n","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"pc2lmChGvP"},{"type":"link","url":"https://mystmd.org/sandbox?tab=demo&myst=YABgAGAAewBjAGEAcgBkAH0AIABUAGUAcwB0ACAAdABpAHQAbABlAAoAOgBmAG8AbwB0AGUAcgA6ACAAKgAqAEEAdQB0AGgAbwByADoAKgAqACAAVABlAHMAdAAgAGEAdQB0AGgAbwByACAAfAAgACoAKgBEAGEAdABlACoAKgA6ACAAVABlAHMAdAAgAGQAYQB0AGUACgBMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuAAoAYABgAGAA","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Here’s an example of a card directive in the MyST sandbox","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"n2qzwseDPc"}],"urlSource":"https://mystmd.org/sandbox?tab=demo&myst=YABgAGAAewBjAGEAcgBkAH0AIABUAGUAcwB0ACAAdABpAHQAbABlAAoAOgBmAG8AbwB0AGUAcgA6ACAAKgAqAEEAdQB0AGgAbwByADoAKgAqACAAVABlAHMAdAAgAGEAdQB0AGgAbwByACAAfAAgACoAKgBEAGEAdABlACoAKgA6ACAAVABlAHMAdAAgAGQAYQB0AGUACgBMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuACAATABvAHIAZQBtACAAaQBwAHMAdQBtAC4AIABMAG8AcgBlAG0AIABpAHAAcwB1AG0ALgAgAEwAbwByAGUAbQAgAGkAcABzAHUAbQAuAAoAYABgAGAA","key":"vvp8quPfb9"},{"type":"text","value":".","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"Q9FajnYv5R"}],"key":"PlBEXpzEFV"}],"key":"V4S0HsxKxP"}],"enumerator":"1","key":"j6GqCFwr1L"},{"type":"paragraph","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"With this in mind, I simply modified ","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"Brf3N5x2nb"},{"type":"link","url":"/build/blogpost-2f0870d611f9d0949b94bbedeed048bf.py","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"my blogpost Python script","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"oPUvAeUgnR"}],"urlSource":"../../src/blogpost.py","static":true,"protocol":"file","key":"QPxn3CKOYc"},{"type":"text","value":" to generate AST like the above rather than the bulleted list I was generating before.","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"iBw78EBEei"}],"key":"YgWSmbdpRK"},{"type":"paragraph","position":{"start":{"line":36,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"Generating output manually with MyST AST takes some getting used-to, but the sandbox-based workflow above helps a ","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"RLKdQtlrwO"},{"type":"emphasis","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"lot","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"PYKEfJE9Qz"}],"key":"snw0QRZYIC"},{"type":"text","value":".\nI think it’ll be way nicer once we can do this programmatically with Jupyter cells, ","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"oDTcuQVH2K"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1026","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"here’s the issue tracking parsing cell outputs as MyST","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"MQf6syWBMK"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1026","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1026"},"internal":false,"protocol":"github","key":"IRpeEQeiI0"},{"type":"text","value":" and ","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"L8uVnNbbXS"},{"type":"link","url":"https://github.com/jupyter-book/mystmd/issues/1633","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"this one specifically about generating AST from notebook cells","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"tPZNwmuMDz"}],"urlSource":"https://github.com/jupyter-book/mystmd/issues/1633","data":{"kind":"issue","org":"jupyter-book","repo":"mystmd","issue_number":"1633"},"internal":false,"protocol":"github","key":"FxmeesS8vW"},{"type":"text","value":".","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"pZSwPEI1vS"}],"key":"riYGFok432"}],"key":"uzlQVAngh1"}],"key":"icktRNfoxj"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Blog","url":"/blog","group":"Welcome"},"next":{"title":"How I’m trying to use BlueSky without getting burned again","url":"/blog/2024/bluesky","group":"2024"}}},"domain":"http://localhost:3000"}