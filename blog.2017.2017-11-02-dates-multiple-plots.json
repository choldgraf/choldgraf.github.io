{"version":1,"kind":"Notebook","sha256":"2b581250bec5b8dec147b3ecdac24fc78b567150196664b3febe34635bedcc75","slug":"blog.2017.2017-11-02-dates-multiple-plots","location":"/blog/2017/2017-11-02-dates_multiple_plots.ipynb","dependencies":[],"frontmatter":{"title":"Combining dates with analysis visualization in python","tags":["python","open science"],"date":"2017-11-02","kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"content_includes_title":false,"authors":[{"id":"chris","nameParsed":{"literal":"Chris Holdgraf","given":"Chris","family":"Holdgraf"},"name":"Chris Holdgraf","orcid":"0000-0002-2391-0678","affiliations":["affiliations-myst-generated-uid-0","affiliations-myst-generated-uid-1"],"twitter":"choldgraf","github":"choldgraf","url":"https://chrisholdgraf.com"}],"github":"https://github.com/choldgraf/choldgraf.github.io","affiliations":[{"name":"2i2c","url":"https://2i2c.org","id":"affiliations-myst-generated-uid-0"},{"name":"Project Jupyter","url":"https://jupyter.org","id":"affiliations-myst-generated-uid-1"}],"abbreviations":{"LF":"The Linux Foundation","JF":"The Jupyter Foundation","JEC":"Jupyter Executive Council","JFB":"The Jupyter Foundation Board","SSC":"Software Steering Council"},"numbering":{"title":{"offset":2}},"edit_url":"https://github.com/choldgraf/choldgraf.github.io/blob/main/blog/2017/2017-11-02-dates_multiple_plots.ipynb","exports":[{"format":"ipynb","filename":"2017-11-02-dates_multiple_plots.ipynb","url":"/build/2017-11-02-dates_mul-063b9263f475470b787ebc210e2160e9.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"children":[{"type":"text","value":"Sometimes you want to do two things:","position":{"start":{"line":28,"column":1},"end":{"line":28,"column":1}},"key":"ztOND5v6SU"}],"key":"jBNBxccELz"},{"type":"list","ordered":true,"start":1,"spread":false,"position":{"start":{"line":30,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"children":[{"type":"text","value":"Plot a timeseries that handles datetimes in a clever way (e.g., with Pandas or Matplotlib)","position":{"start":{"line":30,"column":1},"end":{"line":30,"column":1}},"key":"PxoJUFuppG"}],"key":"gDXovCUw2S"},{"type":"listItem","spread":true,"position":{"start":{"line":31,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Plot some kind of analysis on top of that timeseries.","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"BYkBDSc92i"}],"key":"h3ZC96ZzEq"}],"key":"NoYbW35t3G"},{"type":"paragraph","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"children":[{"type":"text","value":"Sounds simple right? It’s not.","position":{"start":{"line":33,"column":1},"end":{"line":33,"column":1}},"key":"Jty0DLHvPt"}],"key":"QKZ3kUURGI"},{"type":"paragraph","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"The reason for this is that plotting libraries don’t ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"xYQsKRwyxL"},{"type":"emphasis","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"really","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"G2zwL0hymR"}],"key":"gk1CKa2w3w"},{"type":"text","value":" plot human-readable dates, they convert dates to numbers, then change the xtick labels so that they’re human readable. This means that if you want to plot something ","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"oXKmoXiYlx"},{"type":"emphasis","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"on top","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"S0eG8whJMn"}],"key":"fZWkXBAstx"},{"type":"text","value":" of dates, it’s quite confusing.","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"J5dclvUyLz"}],"key":"vY4a0pGEi2"},{"type":"paragraph","position":{"start":{"line":37,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"text","value":"To demonstrate this, let’s grab the latest stock market prices for a couple companies and\nfit regression lines to them...","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"ZtUlhrLB1l"}],"key":"JDsZaZ80W5"}],"key":"HsyxN4NzNJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import pandas as pd\nimport seaborn as sns\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport pandas_datareader.data as web\nimport datetime\nplt.ion()","key":"aKh1v4yXs9"},{"type":"output","id":"iipEYQ6POM1rPZvyIJjV0","data":[],"key":"JJNnrNkTDS"}],"key":"YdAApsAayd"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"start = datetime.datetime(2010, 1, 1)\nend = datetime.datetime(2017, 10, 31)\ncompanies = ['AAPL', 'IBM']\ndata = web.DataReader(companies, 'google', start, end)","key":"msmb9s9sde"},{"type":"output","id":"Op0W0djWga0sNeOEgz1dW","data":[],"key":"Jjs90SCBOd"}],"key":"dfXqLNRgMQ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"def prep_data(data):\n    data = data.sort_index()\n    data = data.resample('D').mean().copy()\n    data = data.reset_index().dropna()\n    data['High'] -= data['High'].min()\n    return data","key":"KrYOz5PsSb"},{"type":"output","id":"TWKkokoX4YHKpg3hvhOSM","data":[],"key":"hLPMdW7JYu"}],"key":"O6wYwN6TbV"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=(12, 6))\nfor company in companies:\n    this_data = prep_data(data.loc[:, :, company])\n    this_data.plot.line('Date', 'High', ax=ax, label=company)","key":"qm5Q4e05oI"},{"type":"output","id":"KhC4iA8oJ3aPTW2_LfUOi","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"e985d9b4ce786b197fc2eb3a23f0ea9d","path":"/build/e985d9b4ce786b197fc2eb3a23f0ea9d.png"},"text/plain":{"content":"&ltmatplotlib.figure.Figure at 0x7f5c24414390&gt","content_type":"text/plain"}}}],"key":"KiqKUpbd9p"}],"key":"BFRi9brxpE"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Let’s say we want to fit a regression line to each stock, should be simple, right?","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"VwXfDyKfGM"}],"key":"H1gRzUxVPB"}],"key":"VEIisCO8Wd"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=(12, 6))\nfor company in companies:\n    this_data = prep_data(data.loc[:, :, company])\n    this_data.plot.line('Date', 'High', ax=ax, label=company)\n    try:\n        sns.regplot('Date', 'High', data=this_data.query('Date > \"2017-04-01\" and Date < \"2017-09-01\"'))\n    except Exception as ee:\n        print('***ERROR: ',  ee, '***')","key":"gpG1FMfzJ9"},{"type":"output","id":"gekNuo9Pk__GotMPHNBtW","data":[{"name":"stdout","output_type":"stream","text":"***ERROR:  reduction operation 'mean' not allowed for this dtype ***\n***ERROR:  reduction operation 'mean' not allowed for this dtype ***\n"},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"e985d9b4ce786b197fc2eb3a23f0ea9d","path":"/build/e985d9b4ce786b197fc2eb3a23f0ea9d.png"},"text/plain":{"content":"&ltmatplotlib.figure.Figure at 0x7f5c21052128&gt","content_type":"text/plain"}}}],"key":"tYih0qMTeh"}],"key":"VptDGVqdqD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We got an error! That’s because seaborn was treating the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FIwEPmZZ6u"},{"type":"inlineCode","value":"Date","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"hKJ1XDW884"},{"type":"text","value":" column as a number, when in fact it was a datetime object.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"vPBqlTvs21"}],"key":"Q5zjtRKSPb"},{"type":"heading","depth":2,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"How do we fix this?","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"u1wCFK4Pw8"}],"identifier":"how-do-we-fix-this","label":"How do we fix this?","html_id":"how-do-we-fix-this","implicit":true,"key":"IuRzqMxfva"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"To fix this, we need to convert the datetime labels to their ordinal (numeric) representation. There are a number of ways to convert dates to numbers. Fortunately, Matplotlib has a convenience function to convert datetime objects to their numeric representation.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"t38zX6hBkv"}],"key":"JC4Ohax3RB"}],"key":"nffQlmrlSJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"from matplotlib.dates import date2num\ndate2num(this_data['Date'][0])","key":"vnEcO6scDQ"},{"type":"output","id":"MjaM5mNW3F2x5DCiGcs19","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"736270.0","content_type":"text/plain"}}}],"key":"Txqv3CrHux"}],"key":"Fefc29B07M"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Here's how we convert the Period object to a date:\nsample_ordinal = this_data['Date'].map(lambda a: date2num(a))\nsample_ordinal.head()","key":"lddmYtbW51"},{"type":"output","id":"8ILNklkm9e9DeoyAO0dZN","data":[{"output_type":"execute_result","execution_count":7,"metadata":{},"data":{"text/plain":{"content":"0    736270.0\n1    736271.0\n2    736272.0\n5    736275.0\n6    736276.0\nName: Date, dtype: float64","content_type":"text/plain"}}}],"key":"b4pvKXzprf"}],"key":"vebeXXlOcR"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Below we’ll insert this into our plotting code to see what happens.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dLJsuBxRhO"}],"key":"Hcx5DUzKk8"}],"key":"lcwG6SMx0f"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, ax = plt.subplots(figsize=(12, 6))\nfor ii, company in enumerate(companies):\n    this_data = prep_data(data.loc[:, :, company])\n    this_data['Date_Ord'] = this_data['Date'].map(lambda a: date2num(a))\n    this_data.plot.line('Date', 'High', ax=ax, label=company, color='C{}'.format(ii))\n    sns.regplot('Date_Ord', 'High', data=this_data.query('Date > \"2017-04-01\" and Date < \"2017-09-01\"'),\n                truncate=True, color='C{}'.format(ii))","key":"c7CPdM7far"},{"type":"output","id":"I9NpDoBUEyolPyg6cz0tj","data":[{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"ba9c46946802beb304b2fa8f0e5388cc","path":"/build/ba9c46946802beb304b2fa8f0e5388cc.png"},"text/plain":{"content":"&ltmatplotlib.figure.Figure at 0x7f5c210b0048&gt","content_type":"text/plain"}}}],"key":"MrsTB2SHCu"}],"key":"AZlKzXqhXJ"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And there you have it - mixed datetime visualization across multiple libraries.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"SsBIpR8Ug6"}],"key":"AMomYbwsfi"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Note that this is ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"lbpvH7wIr6"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"not","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"XxOuHdXIT7"}],"key":"blJcG26Es4"},{"type":"text","value":" the same thing as plotting an actual\ndatetime object, we’re plotting a datetime ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"qwjKzeMwWL"},{"type":"emphasis","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"period","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"vWW37cTRKi"}],"key":"eipxFJJeX9"},{"type":"text","value":" above, which is the only way I’ve figure\nout how to make this work.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"IoC1jH0h40"}],"key":"J4CWT8GdUY"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Of course, this is all unnecessarily complicated, and hopefully we’ll see some patches\nthat ease this in the future. But in the meantime you can refer to the above method\nfor your datetime viz needs.","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"xIhHz8JZjy"}],"key":"vLsPKMEz3U"}],"key":"eOCFceC3dv"}],"key":"T0SYfkZjAw"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Dates in python","url":"/blog/2017/2017-03-16-dates-in-python","group":"2017"},"next":{"title":"The beauty of computational efficiency","url":"/blog/2016/2016-07-02-fft-time","group":"2016"}}},"domain":"http://localhost:3000"}