{"version":1,"kind":"Notebook","sha256":"0b481a80131d8fcc58ee978d794cad7836ed5d09c69373d7bf755b15ae26a70e","slug":"blog.2017.2017-03-16-dates-in-python","location":"/blog/2017/2017-03-16-dates_in_python.ipynb","dependencies":[],"frontmatter":{"title":"Dates in python","tags":["python","open science"],"date":"2017-03-16","kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"content_includes_title":false,"authors":[{"id":"chris","nameParsed":{"literal":"Chris Holdgraf","given":"Chris","family":"Holdgraf"},"name":"Chris Holdgraf","orcid":"0000-0002-2391-0678","affiliations":["affiliations-myst-generated-uid-0","affiliations-myst-generated-uid-1"],"twitter":"choldgraf","github":"choldgraf","url":"https://chrisholdgraf.com"}],"github":"https://github.com/choldgraf/choldgraf.github.io","affiliations":[{"name":"2i2c","url":"https://2i2c.org","id":"affiliations-myst-generated-uid-0"},{"name":"Project Jupyter","url":"https://jupyter.org","id":"affiliations-myst-generated-uid-1"}],"abbreviations":{"LF":"The Linux Foundation","JF":"The Jupyter Foundation","JEC":"Jupyter Executive Council","JFB":"The Jupyter Foundation Board","SSC":"Software Steering Council"},"numbering":{"title":{"offset":2}},"edit_url":"https://github.com/choldgraf/choldgraf.github.io/blob/main/blog/2017/2017-03-16-dates_in_python.ipynb","exports":[{"format":"ipynb","filename":"2017-03-16-dates_in_python.ipynb","url":"/build/2017-03-16-dates_in_-6d6148cedb99690a551009b8a9c0c86a.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"As a part of setting up the website for the ","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"upiDKZELQV"},{"type":"link","url":"http://docathon.org","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"children":[{"type":"text","value":"Docathon","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"LuFLrTKIf9"}],"urlSource":"http://docathon.org","key":"bRlheFNLpL"},{"type":"text","value":" I’ve had to re-learn all of my date string formatting rules. It’s one of those little problems you don’t really think about - turning an arbitrary string into something structured like a date - until you’ve actually got to do it.","position":{"start":{"line":27,"column":1},"end":{"line":27,"column":1}},"key":"mM8Va2Mqto"}],"key":"A1jYgDGEQc"},{"type":"paragraph","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"children":[{"type":"text","value":"There are a bunch of tools in python for using date-like objects, but it’s not always easy to figure out how these work. This post is just a couple of pieces of information I’ve picked up along the process.","position":{"start":{"line":29,"column":1},"end":{"line":29,"column":1}},"key":"y8wJj4m4kk"}],"key":"M0xfFdiGTf"},{"type":"heading","depth":3,"position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"children":[{"type":"text","value":"Useful links","position":{"start":{"line":31,"column":1},"end":{"line":31,"column":1}},"key":"ZWGArbIH29"}],"identifier":"useful-links","label":"Useful links","html_id":"useful-links","implicit":true,"key":"DaPtLABY1Q"},{"type":"paragraph","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"children":[{"type":"text","value":"Here’s a list of useful links I’ve picked up, which I’ll mention below:","position":{"start":{"line":32,"column":1},"end":{"line":32,"column":1}},"key":"R7wPr0rQ4u"}],"key":"TKl8ntBhFQ"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":34,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"link","url":"http://strftime.org/","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"children":[{"type":"text","value":"strftime.org","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"qEnCbazDL3"}],"urlSource":"http://strftime.org/","key":"arl633lYPx"},{"type":"text","value":" for remembering how date string formatting works.","position":{"start":{"line":34,"column":1},"end":{"line":34,"column":1}},"key":"Pbdhou5yeq"}],"key":"MCqQt8ayvO"},{"type":"listItem","spread":true,"position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"link","url":"http://pandas.pydata.org/pandas-docs/stable/timeseries.html","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"children":[{"type":"text","value":"The pandas datetime docs","position":{"start":{"line":35,"column":1},"end":{"line":35,"column":1}},"key":"zUIOmavkCq"}],"urlSource":"http://pandas.pydata.org/pandas-docs/stable/timeseries.html","key":"lmomQMqOW4"}],"key":"xuhJQ7g6i4"},{"type":"listItem","spread":true,"position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"link","url":"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"children":[{"type":"text","value":"A list of time zone names","position":{"start":{"line":36,"column":1},"end":{"line":36,"column":1}},"key":"M28EawjlYJ"}],"urlSource":"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones","data":{"page":"List_of_tz_database_time_zones","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"LUXoVUuphD"}],"key":"eLo35JtoUM"},{"type":"listItem","spread":true,"position":{"start":{"line":37,"column":1},"end":{"line":38,"column":1}},"children":[{"type":"link","url":"https://www.w3.org/TR/NOTE-datetime","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"children":[{"type":"text","value":"ISO 8601","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"eO0009BkDE"}],"urlSource":"https://www.w3.org/TR/NOTE-datetime","key":"K4rBwP8gT1"},{"type":"text","value":" format explanation","position":{"start":{"line":37,"column":1},"end":{"line":37,"column":1}},"key":"veOqfZtvI6"}],"key":"T5rDgFIOZI"}],"key":"YkdPxjPjAE"},{"type":"heading","depth":2,"position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"children":[{"type":"text","value":"A quick tour of our tools","position":{"start":{"line":39,"column":1},"end":{"line":39,"column":1}},"key":"SgcSmDpJAz"}],"identifier":"a-quick-tour-of-our-tools","label":"A quick tour of our tools","html_id":"a-quick-tour-of-our-tools","implicit":true,"key":"Kt6dAClNYy"},{"type":"paragraph","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"children":[{"type":"text","value":"In this post we’ll focus on two main tools for date functionality: the datetime module and pandas.","position":{"start":{"line":40,"column":1},"end":{"line":40,"column":1}},"key":"ixSPc7R2cz"}],"key":"lQ8LjqaPSX"},{"type":"heading","depth":3,"position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"children":[{"type":"text","value":"Datetime","position":{"start":{"line":42,"column":1},"end":{"line":42,"column":1}},"key":"Gwmg8hjDdc"}],"identifier":"datetime","label":"Datetime","html_id":"datetime","implicit":true,"key":"xrIp5GEODC"}],"key":"nC2wubyqFs"},{"type":"block","kind":"notebook-code","data":{"collapsed":true,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":true}},"children":[{"type":"code","lang":"python","executable":true,"value":"import numpy as np\nfrom datetime import datetime\nimport pandas as pd\n%matplotlib inline","key":"BF3RWHDqHP"},{"type":"output","id":"Jw1ouKM_U7qHv2tagBMrz","data":[],"key":"sXuAqQ1uOj"}],"key":"Dkn8AkYXQJ"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"The datetime module is our core definition of how to represent dates in python. We can call datetime directly with a bunch of integers as input, representing years, months, days, etc:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"JWLQq7B9yR"}],"key":"wpAORUmX7O"}],"key":"NOjD7sX3Na"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date = datetime(2016, 3, 3, 12, 12, 12)\ndate","key":"bIcB2aBal1"},{"type":"output","id":"HEFCM4QozCZLj_F-zyukM","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"datetime.datetime(2016, 3, 3, 12, 12, 12)","content_type":"text/plain"}}}],"key":"P66D9CLak7"}],"key":"JdobHFvo89"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can access components of this date object as attributes:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"sfGxuNlxJN"}],"key":"i4AAECf2TI"}],"key":"XQgAgag7IV"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date.day","key":"JGPJr0G8XT"},{"type":"output","id":"vlxbWd5Jv4i4GQrGJrz-T","data":[{"output_type":"execute_result","execution_count":3,"metadata":{},"data":{"text/plain":{"content":"3","content_type":"text/plain"}}}],"key":"ZcUGAwgmQR"}],"key":"dKGjBINOXn"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"attrs = ['year', 'month', 'day']\nfor ii in attrs:\n    print('\\n---\\n')\n    print(ii, getattr(date, ii))","key":"FI7thPQpAl"},{"type":"output","id":"inDGp2oO_mtZAEZoyHbzf","data":[{"name":"stdout","output_type":"stream","text":"\n---\n\nyear 2016\n\n---\n\nmonth 2\n\n---\n\nday 12\n"}],"key":"pOB1SwPZAo"}],"key":"akqzsBwGfB"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Extra components of datetime objects","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Z34S4UKSMC"}],"identifier":"extra-components-of-datetime-objects","label":"Extra components of datetime objects","html_id":"extra-components-of-datetime-objects","implicit":true,"key":"gMovksVfJv"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can also access specific sub-components of the datetime (that is, either the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"neBCG4E7xx"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"date","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"KaYFPJHF1N"}],"key":"SYMtszqIlI"},{"type":"text","value":" or the ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"SgtZxApTkR"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"time","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"hNDuKcthnj"}],"key":"i9ndTtuPgz"},{"type":"text","value":")","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"pLQ6qcvJmh"}],"key":"ZFXtFPaKRI"}],"key":"ujF7SrXwr9"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date.date()","key":"Z0UMdxUi66"},{"type":"output","id":"iJfm9c7d_Vm2VlQsVC7FF","data":[{"output_type":"execute_result","execution_count":5,"metadata":{},"data":{"text/plain":{"content":"datetime.date(2016, 3, 3)","content_type":"text/plain"}}}],"key":"wwJCXQq4YV"}],"key":"bbQ758wxR2"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date.time()","key":"GID1f6iD3n"},{"type":"output","id":"3-atBi1Xpq4VfAexZX_Lv","data":[{"output_type":"execute_result","execution_count":6,"metadata":{},"data":{"text/plain":{"content":"datetime.time(12, 12, 12)","content_type":"text/plain"}}}],"key":"y626eALP9D"}],"key":"Ppct6nJOLd"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Datetime objects also have ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"tiQlwab6OE"},{"type":"strong","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"timezones","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"YrkmgcvrIM"}],"key":"iOewpj8v0D"},{"type":"text","value":". You can check whether our object already has a timezone with the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"T1mZgFq70a"},{"type":"inlineCode","value":"tzinfo","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"d9PjvDN7Ik"},{"type":"text","value":" attribute:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"RA4ejOw5ze"}],"key":"txFT2YuNW3"}],"key":"rkiNoGQ5wX"},{"type":"block","kind":"notebook-code","data":{"collapsed":true,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":true}},"children":[{"type":"code","lang":"python","executable":true,"value":"date.tzinfo","key":"mKOcpBHOXg"},{"type":"output","id":"anQkAjNUzmgPEF1AIGcmE","data":[],"key":"yo4Wxjuajt"}],"key":"EKQ1CofTsU"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"As we can see, there’s nothing in there because we didn’t specify a timezone when we created this object. We need to add a timezone first.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"rw5IOws9EQ"}],"key":"lqkEvzum9r"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"However, once you start using timezones it is useful to use a more powerful package like pandas. Let’s do a quick intro:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"K7QyUAHXqy"}],"key":"QQPXEwyykn"},{"type":"heading","depth":3,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Datetimes in pandas","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"N0pcrWQnw2"}],"identifier":"datetimes-in-pandas","label":"Datetimes in pandas","html_id":"datetimes-in-pandas","implicit":true,"key":"EhM2pdV5il"},{"type":"paragraph","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"children":[{"type":"text","value":"Pandas (among many, many other things) adds some extra functionality on top of datetime. The most useful function for this is probably ","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"a5Ym0u6jgt"},{"type":"inlineCode","value":"to_datetime","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"qUZuerrmHX"},{"type":"text","value":". This will try to be clever about whatever the input is, which lets us do things like give it strings:","position":{"start":{"line":6,"column":1},"end":{"line":6,"column":1}},"key":"eWUeynjg5C"}],"key":"NysLrQnmve"}],"key":"DODp2SIpZ4"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false},"scrolled":true},"children":[{"type":"code","lang":"python","executable":true,"value":"date = pd.to_datetime('2017-03-01')\nprint('Class: ', type(date), '|', date)","key":"s6aRiXN9my"},{"type":"output","id":"ZS0C0Ti0Gf7gxnMdgWGlJ","data":[{"name":"stdout","output_type":"stream","text":"Class:  &ltclass 'pandas.tslib.Timestamp'&gt | 2017-03-01 00:00:00\n"}],"key":"KIlBKBaFiT"}],"key":"e5zEJ9iNxk"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note that this isn’t the same object as the datetime object, but we can usually treat them similarly. It also exposes several new methods that can do useful things, like changing the timezone of our datetime object:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"XUNPOoySGE"}],"key":"Kvd4pqPFcr"}],"key":"ynvUPG3qLf"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date = date.tz_localize('UTC')\ndate","key":"Jt4DCQrfXT"},{"type":"output","id":"AHtwnzyvj9L-_YKcFlEqW","data":[{"output_type":"execute_result","execution_count":9,"metadata":{},"data":{"text/plain":{"content":"Timestamp('2017-03-01 00:00:00+0000', tz='UTC')","content_type":"text/plain"}}}],"key":"G5Q7vRcLdq"}],"key":"yC4bwmN47r"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"print('timezone: ', date.tzinfo)","key":"c6RvfYu6PJ"},{"type":"output","id":"clbIqB0o7zCzlyEeicopZ","data":[{"name":"stdout","output_type":"stream","text":"timezone:  UTC\n"}],"key":"aqomJLe6vV"}],"key":"rG6yVsQSxt"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We used a time zone called “UTC”. That stands for “Coordinated Universal Time”, which is basically the global standard for the “base” time. All other timezones are expressed in reference to this base time. For example, let’s now convert our time to PST:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Rv09i7XIzE"}],"key":"fkoKJbrm7b"}],"key":"oPiGVjk9Gy"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date = date.tz_convert('US/Pacific')\ndate","key":"vkESAjcHHt"},{"type":"output","id":"LAgYlt1TYxy1CMjQ8vkpw","data":[{"output_type":"execute_result","execution_count":13,"metadata":{},"data":{"text/plain":{"content":"Timestamp('2017-02-28 16:00:00-0800', tz='US/Pacific')","content_type":"text/plain"}}}],"key":"DhAQs4QwRK"}],"key":"GkFFnwV0io"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"print('timezone: ', date.tzinfo)","key":"FJSFHsW6xd"},{"type":"output","id":"44zvQI_kk6CeGTB8OcKR4","data":[{"name":"stdout","output_type":"stream","text":"timezone:  US/Pacific\n"}],"key":"Th28akFxfo"}],"key":"Cj0GoeBVjD"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Notice how we now see the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"jwWlWQNwiS"},{"type":"inlineCode","value":"-0800","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"td3aGylnAK"},{"type":"text","value":" at the end. This tells us what kind of offset the ‘US/Pacific’ timezone is from ‘UTC’. It’s expressed as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Y5hRplaDMd"},{"type":"inlineCode","value":"-mmss","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"Uop9H5TYoq"},{"type":"text","value":", where ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"nu4K3ztS4Z"},{"type":"inlineCode","value":"m = minute","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IpcE6fXqdd"},{"type":"text","value":" and ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"y9JzjLXBsP"},{"type":"inlineCode","value":"s = second","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"CnLHbGbyqd"}],"key":"MmouFE22bQ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"One of the really nice things about pandas is that we can represent ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"aNGyRFiUJe"},{"type":"strong","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ranges","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"nkdn0nfR8L"}],"key":"SgTUse5B25"},{"type":"text","value":" in python. Let’s generate a range of dates below:","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"oVVwsqNCGz"}],"key":"Dob3SW82Wn"}],"key":"AeuGEFlJWO"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"# The `freq` parameter tells us the size of the jump between items\nfreq = 'H'  # H == hours, D == days\ndates = pd.date_range('2017-03-01', '2017-03-05', freq=freq, tz='UTC')\ndates[:5]","key":"HuIevHQMRK"},{"type":"output","id":"42lUoCoJZ5iMhRmlDOGpU","data":[{"output_type":"execute_result","execution_count":15,"metadata":{},"data":{"text/plain":{"content":"DatetimeIndex(['2017-03-01 00:00:00+00:00', '2017-03-01 01:00:00+00:00',\n               '2017-03-01 02:00:00+00:00', '2017-03-01 03:00:00+00:00',\n               '2017-03-01 04:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='H')","content_type":"text/plain"}}}],"key":"twube2LX3X"}],"key":"SwQGmBPyKY"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This lets us do several things, such as create masks for any data we have:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"bEt3YUQPZc"}],"key":"mCMHNmXVD9"}],"key":"lRpCON1jyk"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"dates < \"2017-03-02\"","key":"DWdZhDFTcO"},{"type":"output","id":"tgTkiTZXTNjcHtZ5HtGqe","data":[{"output_type":"execute_result","execution_count":16,"metadata":{},"data":{"text/plain":{"content":"array([ True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True,  True,  True,  True,\n        True,  True,  True,  True,  True,  True, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False, False, False,\n       False, False, False, False, False, False, False], dtype=bool)","content_type":"text/plain"}}}],"key":"O1efPWfeG7"}],"key":"NSQrqX4QkT"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"It also lets us plot things across dates:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"O6AhkOcust"}],"key":"SMR71OOwL7"}],"key":"sHCpTCxWe8"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"dates = pd.date_range('2017-01-01', '2017-03-06', freq='H', tz='UTC')\nsr = pd.Series(np.random.randn(len(dates)), index=dates)\nsr.rolling(30).mean().plot()  # Give us a 30 hour rolling mean","key":"vbO5Bjt1Cm"},{"type":"output","id":"ZnSvRTUHTkQoVpZ3MYZUJ","data":[{"output_type":"execute_result","execution_count":17,"metadata":{},"data":{"text/plain":{"content":"&ltmatplotlib.axes._subplots.AxesSubplot at 0x1094c3240&gt","content_type":"text/plain"}}},{"output_type":"display_data","metadata":{},"data":{"image/png":{"content_type":"image/png","hash":"2fa5622fb4021f2a55cd8a02b49a06fd","path":"/build/2fa5622fb4021f2a55cd8a02b49a06fd.png"},"text/plain":{"content":"&ltmatplotlib.figure.Figure at 0x1093d6898&gt","content_type":"text/plain"}}}],"key":"Hs5sGanYx8"}],"key":"EG14lSrgmz"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Note that if we now change the timezone, some of the days have changed because of the time shift:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NyuAYBKKkP"}],"key":"AgkA0Kbj8t"}],"key":"WpsBP7Br2m"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"# Original times\ndates[:5]","key":"WTinvFMny6"},{"type":"output","id":"U9CzaupgNWl5TQ2dZPBe5","data":[{"output_type":"execute_result","execution_count":18,"metadata":{},"data":{"text/plain":{"content":"DatetimeIndex(['2017-01-01 00:00:00+00:00', '2017-01-01 01:00:00+00:00',\n               '2017-01-01 02:00:00+00:00', '2017-01-01 03:00:00+00:00',\n               '2017-01-01 04:00:00+00:00'],\n              dtype='datetime64[ns, UTC]', freq='H')","content_type":"text/plain"}}}],"key":"vmA3TWJdFA"}],"key":"CCqDUK9LI3"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"# New times\ndates.tz_convert('US/Pacific')[:5]","key":"oUeG7Afcyi"},{"type":"output","id":"nIVsGFGnVoFwcVfE1G9-y","data":[{"output_type":"execute_result","execution_count":19,"metadata":{},"data":{"text/plain":{"content":"DatetimeIndex(['2016-12-31 16:00:00-08:00', '2016-12-31 17:00:00-08:00',\n               '2016-12-31 18:00:00-08:00', '2016-12-31 19:00:00-08:00',\n               '2016-12-31 20:00:00-08:00'],\n              dtype='datetime64[ns, US/Pacific]', freq='H')","content_type":"text/plain"}}}],"key":"CpCYuCgLwe"}],"key":"sFWTSOTQAi"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"For more information about date objects in pandas, check out:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"lsTvmo4ioz"}],"key":"esSZk4IeBY"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"link","url":"http://pandas.pydata.org/pandas-docs/stable/timeseries.html","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The pandas datetime docs","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"CWZ1K73p9Z"}],"urlSource":"http://pandas.pydata.org/pandas-docs/stable/timeseries.html","key":"Vemj5oM09W"}],"key":"Fi6vrpFcC5"}],"key":"HbhibdH07n"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"And this is useful for figuring out how to convert between timezones:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"DlxApcQgUq"}],"key":"KUbGWCXmpG"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"link","url":"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"text","value":"A list of time zone names","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"cD4iqhHlKW"}],"urlSource":"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones","data":{"page":"List_of_tz_database_time_zones","wiki":"https://en.wikipedia.org/","lang":"en"},"internal":false,"protocol":"wiki","key":"desv980o3B"}],"key":"Mt2OBmiHgh"}],"key":"JR3n7scHf3"}],"key":"qbUMoYBtB1"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Parsing strings as a date","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"ZiPwK2Krud"}],"identifier":"parsing-strings-as-a-date","label":"Parsing strings as a date","html_id":"parsing-strings-as-a-date","implicit":true,"key":"PQnsz7gzX2"},{"type":"heading","depth":3,"position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"ISO 8601","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"nsZHbE2a7G"}],"identifier":"iso-8601","label":"ISO 8601","html_id":"iso-8601","implicit":true,"key":"qB6RGsEySq"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"So how is pandas doing all of these string auto-conversions? Well, there are a few string structures that are classically defined as date-like structures. For example, the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"xthkirfqUr"},{"type":"inlineCode","value":"yyyy-mm-dd","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"cULJyYzNOL"},{"type":"text","value":" string I gave above looks fairly straightforward for a date.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"PbpuiGkUrO"}],"key":"Q46RkWnjUr"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"What if we wanted to do something more complex with strings? For this, we use the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"JdbNn10zn8"},{"type":"link","url":"https://www.w3.org/TR/NOTE-datetime","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"ISO 8601","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"f3lCvOiqCW"}],"urlSource":"https://www.w3.org/TR/NOTE-datetime","key":"z9Uu6nYivi"},{"type":"text","value":". It takes the following form:","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"fdiyJUPVzF"}],"key":"wYJOPSNHFk"},{"type":"paragraph","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"children":[{"type":"inlineCode","value":"YYYY-MM-DDThh:mm:ss","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"qjRWhjwy2i"},{"type":"text","value":".","position":{"start":{"line":7,"column":1},"end":{"line":7,"column":1}},"key":"ocEEOC5nia"}],"key":"bok0HxEezf"},{"type":"paragraph","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"children":[{"type":"text","value":"Most of these are pretty self-explanatory, but of note is the ","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"JIY80oq2hj"},{"type":"inlineCode","value":"Z","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"BfqkREfy9D"},{"type":"text","value":" at the end. This simply says that there is zero offset for this datetime, AKA it is “UTC” time.","position":{"start":{"line":9,"column":1},"end":{"line":9,"column":1}},"key":"fAekD3ZMC1"}],"key":"R6uzW6FBCw"}],"key":"F7YOLec3Jx"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date = pd.to_datetime('2017-03-01T12:34:02Z')\ndate","key":"BKvnCufAEf"},{"type":"output","id":"OcRkPLwlXb1oqjE82iqmc","data":[{"output_type":"execute_result","execution_count":20,"metadata":{},"data":{"text/plain":{"content":"Timestamp('2017-03-01 12:34:02')","content_type":"text/plain"}}}],"key":"Rcnrv7gy47"}],"key":"yIP896uPNx"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Arbitrary strings","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KEVDGIduun"}],"identifier":"arbitrary-strings","label":"Arbitrary strings","html_id":"arbitrary-strings","implicit":true,"key":"RvRliJKFey"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"We can also tell pandas how to parse an arbitrary date string. For this, we use placeholders representing different components of the date, and then construct a “parsing string” that we give to the function. This tells the function how to turn input strings into datetime objects. For example, let’s say we have this string:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"dxQk8SUsm4"}],"key":"Qvg6iOqUU8"}],"key":"YHuB7Wv3U5"},{"type":"block","kind":"notebook-code","data":{"collapsed":true,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":true}},"children":[{"type":"code","lang":"python","executable":true,"value":"date_string = '02/2016/12'","key":"YBvAA6U8Iy"},{"type":"output","id":"bnedt6cBdLP98tgS02JKV","data":[],"key":"Ix7ksb8RGs"}],"key":"VGuatYlAeT"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"This is a little tricky, because it’s unclear which is the month and which is the day. By specifying a date parsing string, we can easily parse this. The placeholders that we use are in the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"cYXknz8bW2"},{"type":"link","url":"http://strftime.org/","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"strftime","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"KzIeXIAOMC"}],"urlSource":"http://strftime.org/","key":"q31cCYot3O"},{"type":"text","value":" website linked above. Here are some useful ones:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"yEBDfFp3U9"}],"key":"PMtGoVQA7m"},{"type":"list","ordered":false,"spread":false,"position":{"start":{"line":3,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"listItem","spread":true,"position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"inlineCode","value":"%Y","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"kM6vxVJssI"},{"type":"text","value":" = year","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"pbiXifxzUv"}],"key":"y3SfBJjV59"},{"type":"listItem","spread":true,"position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"inlineCode","value":"%m","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"lEHzNEMrYF"},{"type":"text","value":" = month","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"dInaHz8PuV"}],"key":"MAi2AYdKPv"},{"type":"listItem","spread":true,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"inlineCode","value":"%d","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"XFsZDHeIdT"},{"type":"text","value":" = day","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ly3XvSL9fK"}],"key":"CxHWdlOffs"}],"key":"qa3vmrydRo"}],"key":"o2vqqFCWBn"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date = pd.to_datetime(date_string, format='%m/%Y/%d')\ndate","key":"Ajr1lLn7FB"},{"type":"output","id":"Q7va2JmLdZ62yzVVxOfhO","data":[{"output_type":"execute_result","execution_count":22,"metadata":{},"data":{"text/plain":{"content":"Timestamp('2016-02-12 00:00:00')","content_type":"text/plain"}}}],"key":"eBdSGdVjt3"}],"key":"PtBl9Y4Pl6"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Above we told pandas to parse the date string as ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"WfRLnlFtsH"},{"type":"inlineCode","value":"{month}/{year}/{day}","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"LwWF4Y7arR"},{"type":"text","value":". We can do this with any string structure we like:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"oYWrEvlivs"}],"key":"YEcrpmCFhA"}],"key":"CEculShalN"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Create a complicated date string\ndate_string = '02/2016/12 and the time is 11 hr 04 min and 02 sec'\n\n# And tell `to_datetime` how to parse it\ndate = pd.to_datetime(date_string,\n                      format='%m/%Y/%d and the time is %H hr %M min and %S sec')\ndate","key":"hJ0SlhZ5NM"},{"type":"output","id":"4XoF1aoNHBnfI1xxGeCRb","data":[{"output_type":"execute_result","execution_count":23,"metadata":{},"data":{"text/plain":{"content":"Timestamp('2016-02-12 11:04:02')","content_type":"text/plain"}}}],"key":"kSTrtvUPZU"}],"key":"mKv8EsHRE8"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"heading","depth":4,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"Printing strings","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"OK2TViIyI0"}],"identifier":"printing-strings","label":"Printing strings","html_id":"printing-strings","implicit":true,"key":"dmgvTFzDDx"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"The same principle can be applied to printing strings. Any datetime object has a method called ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"s3D89w6pkO"},{"type":"inlineCode","value":"strftime","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"rMH5TH96Cs"},{"type":"text","value":". This lets you create a ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"Yyb0SNucAr"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"string","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"NDZIzmbXdN"}],"key":"rXl0bfz52A"},{"type":"text","value":" from ","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"iJEEag6C4L"},{"type":"strong","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"time","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"OLoR5O2anh"}],"key":"d9fw6Sux9m"},{"type":"text","value":". You can pass a similar date parsing string to what we used above, and it will tell the object what kind of string to create:","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"runxzMLWzu"}],"key":"W9AVAKGQkW"}],"key":"NRGqs2uYLL"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date.strftime('%Y/%m and %d days')","key":"yVD0YUUBYX"},{"type":"output","id":"1FCrBFuh35YeaqZk6Q6dY","data":[{"output_type":"execute_result","execution_count":24,"metadata":{},"data":{"text/plain":{"content":"'2016/02 and 12 days'","content_type":"text/plain"}}}],"key":"r6pqNCfETb"}],"key":"qRDSCYDkIt"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can also use this to do some nice formatting, e.g.:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"qGvuc3pKaD"}],"key":"XhRNSFt2yw"}],"key":"w3PCNFeefd"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"date.strftime('%A, %B %d, %Y')","key":"l8DGk0zsx2"},{"type":"output","id":"iOK6B9n7meo5ZMlQI4XF2","data":[{"output_type":"execute_result","execution_count":25,"metadata":{},"data":{"text/plain":{"content":"'Friday, February 12, 2016'","content_type":"text/plain"}}}],"key":"FEAs6dE93t"}],"key":"PaLPw6LTWL"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"You can also pass these parsing strings to the ","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"AjQwhlHkYr"},{"type":"inlineCode","value":"format","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"s0Yi190b4m"},{"type":"text","value":" method of python strings. For example:","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"IutABlzH6m"}],"key":"h9H2ajZlkF"}],"key":"XdYfHaPiQc"},{"type":"block","kind":"notebook-code","data":{"collapsed":false,"deletable":true,"editable":true,"jupyter":{"outputs_hidden":false}},"children":[{"type":"code","lang":"python","executable":true,"value":"mystring = \"Today's date is...{:%A, %B %d, %Y}\"\nprint(mystring.format(date))","key":"fPe6Vn1EVK"},{"type":"output","id":"qAHMEH-86qn422GRTgV8U","data":[{"name":"stdout","output_type":"stream","text":"Today's date is...Friday, February 12, 2016\n"}],"key":"OVPhT6JzW4"}],"key":"EtukgjMCgF"},{"type":"block","kind":"notebook-content","data":{"deletable":true,"editable":true},"children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"And that’s it...sort of","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"J5zQvy9AKM"}],"identifier":"and-thats-it-sort-of","label":"And that’s it...sort of","html_id":"and-thats-it-sort-of","implicit":true,"key":"SVfRYaoBMm"},{"type":"paragraph","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"In reality this is the tip of the iceberg when it comes to using datetime objects, but this should be enough to get you started. Make sure that any time you read in new data, you double check whether it is timezone encoded. If it isn’t, then figure out what timezone you can assume (often it is UTC), and encoding it yourself to avoid confusion.","position":{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},"key":"RbPsx42iW3"}],"key":"y5e99GI7cE"},{"type":"paragraph","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"Datetime objects are incredibly useful, but can be a little confusing, so I hope this helps clear some things up!","position":{"start":{"line":4,"column":1},"end":{"line":4,"column":1}},"key":"LFnamtGIlk"}],"key":"uwt3DYfrr0"}],"key":"ruWMK5CVDt"}],"key":"jIxRbbGhW9"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Matplotlib Cyclers are Great","url":"/blog/2017/2017-01-04-matplotlib-cycles","group":"2017"},"next":{"title":"Combining dates with analysis visualization in python","url":"/blog/2017/2017-11-02-dates-multiple-plots","group":"2017"}}},"domain":"http://localhost:3000"}